{"version":3,"sources":["logo.svg","API/Api.js","API/calls.js","Reducer/Actions.js","Components/Login/index.js","Firebase/firebase.js","Components/Signup/index.js","Components/NewPost/index.js","Components/Post/PostModel.js","Components/Post/index.js","Components/Comment/index.js","Components/Comments/index.js","Components/Posts/index.js","Components/Home/index.js","Components/Postdetail/index.js","Components/Profile/index.js","Header/index.js","Routes/PrivateRoute.js","Routes/Router.js","App.js","reportWebVitals.js","Reducer/Reducer.js","index.js"],"names":["Api","signin","data","Promise","resolve","reject","Axios","url","method","query","email","password","then","result","alert","errors","message","localStorage","setItem","user","getUser","catch","err","a","post","headers","getItem","console","log","postComment","postid","val","Date","toISOString","getPost","id","createPost","title","body","Image","time","singinThunk","payLoad","type","getPostsAction","dispatch","getPosts","res","getUserThunk","connect","state","Actions","props","useState","setEmail","setPassword","show","setShow","useEffect","history","push","className","src","process","placeholder","size","onChange","e","target","value","pr","width","h","onClick","colorScheme","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Signup","name","setName","age","setAge","imageTempUrl","setImageTempUrl","image","setImage","uploadImage","filename","uploadTask","storage","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","error","getDownloadURL","document","getElementById","click","files","URL","createObjectURL","style","display","uuidv4","axios","toast","useToast","setUser","titleInput","setTitleInput","setTitle","setBody","Post","clear","status","duration","isClosable","Object","keys","length","flexDirection","Name","padding","marginBottom","borderRadius","height","marginLeft","split","visibility","marginTop","transition","justifyContent","variant","leftIcon","PostModel","isOpen","open","onClose","close","Likes","map","ele","fontSize","fontWeight","withRouter","setPost","comment","setComment","likeModal","setLikeModal","like","setLike","forEach","element","_id","likePost","original","temp","update","dislikePost","likearray","filter","alignItems","cursor","pathname","class","Title","Body","aria-hidden","color","marginRight","location","comments","undefined","children","postcomment","item","wordBreak","Text","moment","fromNow","Comments","setComments","home","posts","getUsers","setPosts","reverse","onPost","tempPosts","profile","Home","match","params","getPostDetail","tempPost","to","margin","border","textAlign","followers","following","users","search","setSearch","drop","setDrop","backgroundColor","flex","borderColor","pointerEvents","onOutsideClick","includes","PrivateRoute","path","component","Router","exact","Login","Postdetail","Profile","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","Action","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d443c8e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const Api='https://stark-ocean-73455.herokuapp.com/'","import { Api } from \"./Api\"\r\nimport Axios from 'axios'\r\nimport { Redirect } from \"react-router\"\r\nexport const signin=(data)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        Axios({\r\n            url: Api,\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n    mutation{\r\n        signin(email:\"${data.email}\",pass:\"${data.password}\")\r\n        }\r\n      `\r\n            }\r\n        }).then((result) => {\r\n            if (\"errors\" in result.data) {\r\n            alert(\"Incorrect username or password\")\r\n            reject(result.data.errors[0].message)\r\n            } else {\r\n              localStorage.setItem(\"x-auth-token\",result.data.data.signin)\r\n              let user=getUser(data.email)\r\n              resolve(user)\r\n            }\r\n          \r\n        }).catch(err=>{\r\n            alert(\"Incorrect username or password\")\r\n            reject(err)\r\n        })\r\n    })\r\n    \r\n\r\n}\r\n\r\nexport const getUser=async(email)=>{\r\n  try{\r\n    let data = await Axios.post(Api, {\r\n        query: `mutation{\r\n            getUser(email:\"${email}\"){\r\n                Name\r\n                _id\r\n                image\r\n                email\r\n                followers{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                following{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                Age\r\n                posts{\r\n                    _id\r\n                    Title\r\n                    Body\r\n                    Image\r\n                    Likes{\r\n                        _id\r\n                        Name\r\n                        image\r\n                    }\r\n                    comments{\r\n                        Text\r\n                        time\r\n                        user{\r\n                            _id\r\n                            Name\r\n                            image\r\n                        }\r\n                    }\r\n                    time\r\n                }\r\n\r\n          }\r\n}`\r\n      }\r\n      , {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n        }\r\n      }\r\n      )\r\n      console.log(data)\r\n      localStorage.setItem(\"user_email\",email)\r\n      return data\r\n    }catch(err){\r\n      \r\n      <Redirect path='/Signin'></Redirect>\r\n    }\r\n}\r\n\r\n\r\nexport const getPosts=()=>{\r\n   \r\n       return new Promise((resolve,reject)=>{\r\n        let data = Axios.post(Api, {\r\n            query: `\r\n          query{\r\n              getPosts{\r\n                Title\r\n                Body\r\n                Image\r\n                _id\r\n                Likes{\r\n                  Name\r\n                  _id\r\n                  image\r\n                }\r\n                user{\r\n                  Name\r\n                  _id\r\n                  image\r\n                  followers{\r\n                    _id\r\n                    Name\r\n                    image\r\n                  }\r\n                  following{\r\n                    _id\r\n                    Name\r\n                    image\r\n                  }\r\n                  posts{\r\n                    _id\r\n                  }\r\n                }\r\n                comments{\r\n                  Text\r\n                  time\r\n                  user{\r\n                    Name\r\n                    _id\r\n                    image\r\n                  }\r\n                }\r\n              }\r\n            }\r\n  `\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n           \r\n           resolve([...data.data.data.getPosts])\r\n          }).catch(err=>{\r\n            alert(err)\r\n            reject(err)\r\n          })\r\n       })  \r\n}\r\n\r\nexport const postComment=(postid,val)=>{\r\n    return new Promise((resolve,reject)=>{\r\n         Axios.post(Api, {\r\n            query: `\r\n            mutation{\r\n              createComment(pid:\"${postid}\",text:\"${val}\",time:\"${new Date().toISOString()}\"){\r\n                Text\r\n                user{\r\n                  Name\r\n                }\r\n              }\r\n            }\r\n      `\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n            resolve(data)\r\n        })\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport const getPost=(id)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        Axios.post(Api, {\r\n            query: `mutation{\r\n                        getPost(id:\"${id}\"){\r\n                          Title\r\n                          _id\r\n                          Body\r\n                          Image\r\n                          user{\r\n                            Name\r\n                            _id\r\n                            image\r\n                          }\r\n                          comments{\r\n                            time\r\n                              Text\r\n                            user{\r\n                              image\r\n                              Name\r\n                              _id\r\n                            }\r\n                          }\r\n                          Likes{\r\n                            Name\r\n                            image\r\n                            _id\r\n                          }\r\n                          \r\n                        }\r\n                      }`\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n              resolve(data.data.data.getPost)\r\n          }).catch(err=>{\r\n              reject(err)\r\n          })\r\n    })\r\n\r\n}\r\n\r\nexport const createPost=(data)=>{\r\n  return new Promise((resolve,reject)=>{\r\n       Axios.post(Api, {\r\n          query: `\r\n          mutation{\r\n            createPost(title:\"${data.title}\",body:\"${data.body}\",Image:\"${data.Image}\",time:\"${data.time}\"){\r\n              Title\r\n              _id\r\n              user{\r\n                Name\r\n              }\r\n              comments{\r\n                id\r\n              }\r\n            }\r\n          }\r\n    `\r\n        }, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n          }\r\n        }).then((data)=>{\r\n          resolve(data)\r\n      })\r\n  })\r\n  \r\n}\r\n\r\n\r\n\r\nexport const getUsers=()=>{\r\n  return new Promise((resolve,reject)=>{\r\n    Axios.post(Api, {\r\n      query: `query{\r\n        getUsers{\r\n          Name\r\n          _id\r\n          image\r\n          email\r\n          followers{\r\n              Name\r\n              _id\r\n              image\r\n          }\r\n          following{\r\n              Name\r\n              _id\r\n              image\r\n          }\r\n          Age\r\n          posts{\r\n              _id\r\n              Title\r\n              Body\r\n              Image\r\n              Likes{\r\n                  _id\r\n                  Name\r\n                  image\r\n              }\r\n              comments{\r\n                  Text\r\n                  time\r\n                  user{\r\n                      _id\r\n                      Name\r\n                      image\r\n                  }\r\n              }\r\n              time\r\n          }\r\n\r\n    }\r\n      }`\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((res)=>{\r\n      resolve(res)\r\n    })\r\n  })\r\n}","import {getPosts, signin, getUser, getUsers} from '../API/calls'\r\n\r\nconst singinThunk=(payLoad)=>{\r\n  \r\n    return({\r\n        type:\"SIGNIN\",\r\n        payLoad:payLoad\r\n    })\r\n}\r\n\r\nexport const signinAction=(data)=>{\r\nreturn (async(dispatch)=>{\r\n    let res=await signin(data)\r\n  \r\n    return(dispatch(singinThunk(res)))\r\n})\r\n}\r\nconst getPostThunk=(payLoad)=>{\r\nreturn({\r\n    type:\"GET_POSTS\",\r\n    payLoad:payLoad\r\n})\r\n}\r\nexport const getPostsAction=()=>{\r\n    return(async(dispatch)=>{\r\n        let res=await getPosts()\r\n       \r\n        return(dispatch(getPostThunk([...res])))\r\n    })\r\n}\r\n\r\nexport const getUserThunk=()=>{\r\n    return (async(dispatch)=>{\r\n        let res=await getUser()\r\n      \r\n        return(dispatch(singinThunk(res)))\r\n    })\r\n    }\r\n const getUsersAction=(data)=>{\r\n     return({\r\n         type:\"GET_USERS\",\r\n         payLoad:data\r\n     })\r\n }   \r\nexport const getUsersThunk=()=>{\r\n        return (async(dispatch)=>{\r\n            let res=await getUsers()\r\n          \r\n            return(dispatch(getUsersAction(res.data.data.getUsers)))\r\n        })\r\n        }","import React, { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport { Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { connect } from 'react-redux'\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"x-auth-token\") && localStorage.getItem(\"x-auth-token\")!==\"\"){\r\n            props.history.push('/home')\r\n        }\r\n    },[props])\r\n    const handleHide = () => setShow(!show)\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_holder\">\r\n                <img src={process.env.PUBLIC_URL+'/Logo/dark.png'}></img>\r\n                <h1>Login</h1>\r\n            <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n            <InputGroup size=\"md\">\r\n                <Input\r\n                    pr=\"4.5rem\"\r\n                    type={show ? \"text\" : \"password\"}\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={(e) => { setPassword(e.target.value) }}\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleHide}>\r\n                        {show ? \"Hide\" : \"Show\"}\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n            <Button onClick={() => {\r\n                props.signin({email:email,password:password})\r\n            //     axios({\r\n            //         url: Api,\r\n            //         method: 'post',\r\n            //         data: {\r\n            //             query: `\r\n            // mutation{\r\n            //     signin(email:\"${email}\",pass:\"${password}\")\r\n            //     }\r\n            //   `\r\n            //         }\r\n            //     }).then((result) => {\r\n            //         localStorage.setItem(\"x-auth-token\",result.data.data.signin)\r\n            //         props.history.push('/home')\r\n            //         // console.log(result)\r\n            //     });\r\n            }} colorScheme=\"blue\">Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapActionsToProps=(dispatch)=>{\r\n    return({\r\n        signin:(data)=>{dispatch(Actions.signinAction(data))}\r\n    })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        user:state.user\r\n    })\r\n}\r\nexport default connect(mapActionsToState,mapActionsToProps)(Login)","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAeQQP_p1JVfQ7CExQtfNkYvDNQbTVQiA4\",\r\n    authDomain: \"social-media-961de.firebaseapp.com\",\r\n    projectId: \"social-media-961de\",\r\n    storageBucket: \"social-media-961de.appspot.com\",\r\n    messagingSenderId: \"769621990838\",\r\n    appId: \"1:769621990838:web:dc552b04d1a8039626b517\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig)\r\nexport default firebase","import React, { useEffect, useState } from 'react'\r\nimport './Signup.css'\r\nimport { Avatar, Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport firebase from '../../Firebase/firebase'\r\nconst Signup = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [imageTempUrl,setImageTempUrl]=useState('')\r\n    \r\n    const [image,setImage]=useState()\r\n    const handleHide = () => setShow(!show)\r\n\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n   \r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"signup_holder\">\r\n                <img src={process.env.PUBLIC_URL + '/Logo/dark.png'}></img>\r\n                <h1>Signup</h1>\r\n                <Avatar onClick={()=>{\r\n                    document.getElementById(\"profile_pic\").click()\r\n                    \r\n                }} size=\"2xl\" name={name} src={imageTempUrl}/>\r\n                <input onChange={(e)=>{\r\n                    setImage(e.target.files[0])\r\n                    setImageTempUrl(URL.createObjectURL(e.target.files[0]))\r\n                }}  id=\"profile_pic\" type=\"file\" style={{display:\"none\"}}></input>\r\n                <Input placeholder=\"Enter Name\" size=\"md\" onChange={(e) => { setName(e.target.value) }} />\r\n                <Input placeholder=\"Enter Age\" size=\"md\" onChange={(e) => { setAge(e.target.value) }} />\r\n                <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <InputGroup size=\"md\">\r\n                    <Input\r\n                        pr=\"4.5rem\"\r\n                        type={ show ? \"text\" : \"password\" }\r\n                        placeholder=\"Enter Password\"\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={ handleHide }>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                        </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n                <Button onClick={async() => {\r\n                    let filename=uuidv4()\r\n                    let res=await uploadImage(filename)\r\n                    axios({\r\n                        url: Api,\r\n                        method: 'post',\r\n                        data: {\r\n                            query: `\r\n                        mutation{\r\n                            createUser(email:\"${email}\",Age:${age},name:\"${name}\",password:\"${password}\",image:\"${res}\"){\r\n                              Name\r\n                              _id\r\n                              Age\r\n                            }\r\n                          }\r\n              `\r\n                        }\r\n                    }).then((result) => {\r\n                        localStorage.setItem(\"user\", result.data)\r\n                        props.history.push('/signin')\r\n                    });\r\n                }} colorScheme=\"blue\">Signup</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup","import { Avatar, Button, Divider, Input, Skeleton } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { MdTitle } from 'react-icons/md'\r\nimport { GoRocket } from 'react-icons/go'\r\nimport { BsImageAlt } from 'react-icons/bs'\r\nimport firebase from '../../Firebase/firebase'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {createPost} from '../../API/calls'\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport './NewPost.css'\r\nconst NewPost = (props) => {\r\n    const toast = useToast()\r\n    const [user, setUser] = useState({})\r\n    const [titleInput, setTitleInput] = useState(false)\r\n    const [image, setImage] = useState(null)\r\n    const [title,setTitle]=useState('')\r\n    const [body,setBody]=useState('')\r\n    useEffect(() => {\r\n        props.getUser()\r\n        \r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(props.user)\r\n        if (\"data\" in props.user && !(\"error\" in props.user.data)) {\r\n\r\n            setUser(props.user.data.data.getUser)\r\n        }\r\n    }, [props.user])\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n    const Post=async()=>{\r\n        let res=null\r\n        if(image){\r\n            let filename=uuidv4()\r\n            res=await uploadImage(filename)\r\n        }\r\n        \r\n        let data={\r\n            Image:image?res:\"\",\r\n            body:body,\r\n            title:title,\r\n            time:new Date()\r\n        }\r\n        let result=await createPost(data)\r\n        props.getPosts()\r\n        clear()\r\n        toast({\r\n            title: \"Posted successfully.\",\r\n            \r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n\r\n    }\r\n    const clear=()=>{\r\n        setImage(null)\r\n        setTitle('')\r\n        setTitleInput(false)\r\n        setBody('')\r\n    }\r\n    return (<div>{\r\n        Object.keys(user).length !== 0 ? <div className=\"newPostHolder\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"newpost\">\r\n                <Avatar size=\"md\" name={user.Name} src={user.image} />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", padding: 10 }}>\r\n                    {image ? <img style={{ marginBottom: 10 }} src={URL.createObjectURL(image)}></img> : null}\r\n                    <Input onChange={(e)=>{setBody(e.target.value)}} style={{ borderRadius: 15, height: 75, marginLeft: 10 }} placeholder={`What's on your mind, ${user.Name.split(' ')[0]} ?`} size=\"lg\" />\r\n                    <Input onChange={(e)=>{setTitle(e.target.value)}} placeholder=\"Enter title\" style={{ visibility: titleInput ? \"visible\" : \"hidden\", height: titleInput ? 50 : 0, borderRadius: 15, marginLeft: 10, marginTop: 20, transition: \"height 0.2s,visibility 0.1s\" }}></Input>\r\n                </div>\r\n            </div>\r\n            <Divider></Divider>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\", marginTop: 15, marginBottom: 15 }}>\r\n                <Button onClick={() => { setTitleInput(!titleInput) }} variant=\"ghost\" colorScheme=\"green\" leftIcon={<MdTitle />}>\r\n                    Add Title\r\n                </Button>\r\n                <Button onClick={() => {\r\n                    document.getElementById(\"image_select\").click()\r\n                }} type='file' variant=\"ghost\" colorScheme=\"red\" leftIcon={<BsImageAlt />}>\r\n                    Add Image\r\n                </Button>\r\n                <Button onClick={Post} variant=\"ghost\" colorScheme=\"blue\" leftIcon={<GoRocket />}>\r\n                    POST\r\n                </Button>\r\n                <input id=\"image_select\" onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                }} type=\"file\" style={{ display: \"none\" }}></input>\r\n\r\n            </div>\r\n        </div> : <div><Skeleton height=\"400px\" /></div>\r\n    }</div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            user: state.user\r\n        }\r\n    )\r\n}\r\nconst mapActionsToState = (dispatch) => {\r\n    return (\r\n        {\r\n            getUser: () => {dispatch(Actions.getUserThunk(localStorage.getItem(\"user_email\"))) },\r\n            getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n        }\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapActionsToState)(NewPost)","import React from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Divider,\r\n    Avatar,\r\n    Text,\r\n  } from \"@chakra-ui/react\"\r\n\r\nconst PostModel=(props)=>{\r\n    \r\nreturn(\r\n    <>\r\n    <Modal isOpen={props.open} onClose={props.close}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Liked By</ModalHeader>\r\n        <ModalCloseButton />\r\n        <Divider></Divider>\r\n        <ModalBody>\r\n          <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n              {props.Likes.map((ele)=>{\r\n                  return(\r\n                      <div style={{display:\"flex\",flexDirection:'row',marginBottom:15,marginTop:15}}>\r\n                          <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                          <Text fontSize=\"md\" style={{ fontWeight: 600, marginLeft: 10 }}>{ele.Name}</Text>\r\n                      </div>\r\n                  )\r\n              })}\r\n          </div>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          {/* <Button colorScheme=\"blue\" mr={3} onClick={props.close}>\r\n            Close\r\n          </Button> */}\r\n          {/* <Button variant=\"ghost\">Secondary Action</Button> */}\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n)\r\n}\r\n\r\nexport default PostModel","import React, { useEffect, useState } from 'react'\r\nimport { Divider, Input, Text, Button, Avatar, Skeleton } from \"@chakra-ui/react\"\r\nimport './Post.css'\r\nimport { withRouter } from 'react-router'\r\nimport PostModel from './PostModel'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions' \r\n\r\nconst Post = (props) => {\r\n    // let post = props.post\r\n    const [post,setPost]=useState()\r\n    const [comment,setComment]=useState('')\r\n    const [likeModal,setLikeModal]=useState(false)\r\n    const [like,setLike]=useState(false)\r\n    useEffect(()=>{\r\n      if(typeof post !== 'undefined'){\r\n        \r\n        if((\"data\" in props.user && !(\"error\" in props.user.data))){\r\n          \r\n        post.Likes.forEach(element => {\r\n            if(element._id===props.user.data.data.getUser._id){\r\n              \r\n                setLike(true)\r\n            }else{\r\n              \r\n              setLike(false)\r\n            }\r\n        });\r\n        if(post.Likes.length===0){\r\n          setLike(false)\r\n        }\r\n    }\r\n  }\r\n    },[props.user,post])\r\n    useEffect(()=>{\r\n      setPost(props.post)\r\n    },[])\r\n    const likePost=async()=>{\r\n        let original={...post}\r\n        let temp={...post}\r\n        temp.Likes=[...temp.Likes,{_id:props.user.data.data.getUser._id,image:props.user.data.data.getUser.image,Name:props.user.data.data.getUser.Name}]\r\n        setPost({...temp})\r\n        Axios.post(Api, {\r\n            query: `\r\n            mutation{\r\n                likePost(id:\"${post._id}\"){\r\n                  Likes{\r\n                    _id\r\n                    Name\r\n                  }\r\n                  Title\r\n                  user{\r\n                    Name\r\n                    Age\r\n                    image\r\n                  }\r\n                }\r\n              }\r\n      `\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((res)=>{\r\n            props.update()\r\n          }).catch(err=>{\r\n            setPost({...original})\r\n          })\r\n        \r\n    }\r\n   \r\n    const dislikePost=async()=>{\r\n      let original={...post}\r\n      let temp={...post}\r\n      let likearray=temp.Likes.filter((ele)=>{\r\n        if(ele._id===props.user.data.data.getUser._id){\r\n          return false\r\n        }\r\n        else{\r\n          return true\r\n        }\r\n      })\r\n      temp.Likes=[...likearray]\r\n      setPost({...temp})\r\n      Axios.post(Api, {\r\n          query: `\r\n          mutation{\r\n              dislikePost(id:\"${post._id}\"){\r\n                Likes{\r\n                  _id\r\n                  Name\r\n                }\r\n                Title\r\n                user{\r\n                  Name\r\n                  Age\r\n                  image\r\n                }\r\n              }\r\n            }\r\n    `\r\n        }, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n          }\r\n        }).then((res)=>{\r\n          // props.getPosts()\r\n          props.update()\r\n        }).catch(err=>{\r\n          console.log(err)\r\n          setPost({...original})\r\n        })\r\n      \r\n  }\r\n\r\n    return (\r\n\r\n        <div className=\"post\">\r\n          {typeof post === 'undefined'?<Skeleton height=\"400px\" />:<div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}><Avatar style={{cursor:\"pointer\"}} onClick={()=>{\r\n              props.history.push({pathname:'/profile',state:{user:post.user}})\r\n            }} size=\"sm\" name={post.user.Name} src={post.user.image} /><Text fontSize=\"md\" style={{ fontWeight: 600, marginLeft: 10 }}>{post.user.Name}</Text></div>\r\n            <Divider className=\"divider\" />\r\n            {post.Image!==\"\"?<><img class=\"post_img\" src={post.Image}></img>\r\n            <Divider className=\"divider\" />\r\n            </>:null}\r\n            <Text fontSize=\"sm\" style={{ fontWeight: 600 }}>{post.Title}</Text>\r\n            <Text fontSize=\"sm\">{post.Body}</Text>\r\n            <Divider className=\"divider\" />\r\n            <div>{like?<i onClick={dislikePost} class=\"fa fa-thumbs-up\" aria-hidden=\"true\" style={{ color: \"#e64949\", fontSize: 20, marginRight: 10, cursor:\"pointer\" }}></i>:<i onClick={likePost} class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\" style={{ color: \"#e64949\", fontSize: 20, marginRight: 10,cursor:\"pointer\" }}></i>}<Text className=\"like_text\" onClick={()=>{setLikeModal(true)}}>{`${post.Likes ? post.Likes.length : 0} Likes`}</Text><i style={{ color: \"#082d0f\", fontSize: 20, marginLeft: 20, marginRight: 10 }} class=\"fa fa-comments\" aria-hidden=\"true\"></i><Text onClick={() => {\r\n                if (props.location.pathname === '/home') {\r\n                    props.history.push(`/post/${post._id}`)\r\n                }\r\n            }} className=\"comment_text\">{`${post.comments ? post.comments.length : 0} Comments`}</Text></div>\r\n            <Divider className=\"divider\" />\r\n            {props.children !== undefined ?\r\n                <div>{props.children}\r\n                    <Divider className=\"divider\" />\r\n                </div>\r\n                : null}\r\n\r\n            <div style={{ display: \"flex\", alignItems: \"center\", marginTop: 10, justifyContent: \"space-between\" }}><Input value={comment} onChange={(e)=>{\r\n                setComment(e.target.value)}} style={{ borderRadius: 100 }} placeholder=\"Enter comment...\" size=\"md\" /> <Button onClick={()=>{\r\n                    props.postcomment(comment,post._id)\r\n                    setComment('')\r\n                    }} style={{ marginLeft: 5 }} colorScheme=\"teal\" size=\"md\">\r\n                POST\r\n                    </Button>\r\n            </div>\r\n                    <PostModel Likes={post.Likes} open={likeModal} close={()=>{setLikeModal(false)}}></PostModel>\r\n                    </div>}\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapActionsToProps=(dispatch)=>{\r\n  return({\r\n      getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n  })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        user:state.user,\r\n        \r\n    })\r\n  }\r\nexport default withRouter(connect(mapActionsToState,mapActionsToProps)(Post))","import { Avatar, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport './Comment.css'\r\nimport moment from 'moment'\r\nimport { withRouter } from 'react-router'\r\nconst Comment=(props)=>{\r\n    \r\n    let comment=props.item\r\n    if(comment){\r\n    return(\r\n        <div className=\"comment\">\r\n            <Avatar style={{cursor:\"pointer\"}} onClick={()=>{props.history.push({pathname:\"/profile\",state:{user:comment.user}})}} size=\"sm\" name={comment.user.Name} src={comment.user.image} />\r\n            <div className=\"comment_sec\">\r\n            <Text fontSize=\"sm\" style={{fontWeight:600}}>{comment.user.Name}</Text>\r\n            <Text fontSize=\"sm\" style={{wordBreak:\"break-all\"}}>{comment.Text}</Text>\r\n            <Text fontSize=\"xs\" style={{wordBreak:\"break-all\",color:\"grey\"}}>{moment(comment.time).fromNow()}</Text>\r\n            </div>\r\n        </div>\r\n    )}\r\n    else{\r\n        return(<div>No Comments.</div>)\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Comment)","import React, { useEffect, useState } from \"react\"\r\nimport './Comments.css'\r\nimport Comment from '../Comment'\r\nconst Comments=(props)=>{\r\n    const [comments,setComments]=useState([])\r\n    \r\n    useEffect(()=>{\r\n        setComments([...props.comments])\r\n    },[props])\r\n\r\n   \r\n    return(\r\n    <div className=\"comments\">\r\n        {props.home?<Comment item={comments[comments.length-1]}></Comment> :comments.map((ele)=>{\r\n           \r\n            return(\r\n                <Comment item={ele}></Comment>\r\n            )\r\n        })}\r\n    </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Comments","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport Post from '../Post'\r\nimport { withRouter } from 'react-router'\r\nimport { Api } from '../../API/Api'\r\nimport Comments from '../Comments'\r\nimport * as Actions from '../../Reducer/Actions' \r\nimport { connect } from 'react-redux'\r\nimport { postComment } from '../../API/calls'\r\nconst Posts = (props) => {\r\n  \r\n  const [posts, setPosts] = useState([])\r\n  useEffect(()=>{\r\n    console.log(\"HERE\")\r\n    props.getPosts()\r\n    props.getUsers()\r\n  },[])\r\n  useEffect(() => {\r\n    console.log(props.posts)\r\n    setPosts([...props.posts].reverse())\r\n      \r\n  }, [props.posts])\r\n\r\n  const onPost = async(val, postid) => {\r\n    let temp = []\r\n    let tempPosts=[...posts]\r\n    posts.map((ele) => {\r\n      if (ele._id == postid) {\r\n        ele.comments.push({ Text: val, user: { ...props.user.data.data.getUser } })\r\n      }\r\n      temp.push(ele)\r\n    })\r\n    \r\n    setPosts([...temp])\r\n\r\nlet data=await postComment(postid,val)\r\n    if(data.error){\r\n      setPosts([...tempPosts])\r\n      props.getPosts()\r\n      alert(\"Something went wrong\")\r\n    }\r\n  }\r\n \r\n  return (\r\n    <>\r\n    {props.profile?posts.map((ele) => {\r\n      console.log(props.profile,ele._id)\r\nif(ele.user._id===props.profile){\r\n  \r\nreturn (\r\n  <Post postcomment={onPost} post={ele}>\r\n    <Comments home={true} comments={ele.comments}></Comments>\r\n  </Post>\r\n)}\r\n}) :posts.map((ele) => {\r\n\r\n      return (\r\n        <Post update={()=>props.getPosts()} postcomment={onPost} post={ele}>\r\n          <Comments home={true} comments={ele.comments}></Comments>\r\n        </Post>\r\n      )\r\n    })}\r\n    </>\r\n  )\r\n\r\n}\r\nconst mapActionsToProps=(dispatch)=>{\r\n  return({\r\n      getPosts:()=>{dispatch(Actions.getPostsAction())},\r\n      getUsers:()=>{dispatch(Actions.getUsersThunk())}\r\n  })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n  return({\r\n      posts:state.posts,\r\n      user:state.user\r\n  })\r\n}\r\nexport default withRouter(connect(mapActionsToState,mapActionsToProps)(Posts))","import React from 'react'\r\nimport NewPost from '../NewPost'\r\nimport Posts from '../Posts'\r\nimport './Home.css'\r\nconst Home=(props)=>{\r\nreturn(\r\n    <div className=\"home\">\r\n        <div className=\"sec1\"></div>\r\n       \r\n       <div className=\"sec2\">\r\n           <NewPost></NewPost>\r\n           <Posts></Posts></div>\r\n       <div className=\"sec3\"></div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Divider, Input, Skeleton, Text } from '@chakra-ui/react'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions' \r\nimport './Postdetail.css'\r\nimport Post from '../Post'\r\nimport Comments from '../Comments'\r\nimport { getPost, postComment } from '../../API/calls'\r\nimport { connect } from 'react-redux'\r\nconst Postdetail = (props) => {\r\n  const [post, setPost] = useState({})\r\n  useEffect(() => {\r\n    const getPostDetail=async()=>{\r\n      let data=await getPost(props.match.params.id)\r\n      setPost(data)\r\n    }\r\n    getPostDetail()\r\n  }, [])\r\n  // ----------------\r\n  const onPost = async(val, postid) => {\r\n    let temp = {...post}\r\n    let tempPost={...post}\r\n    temp.comments=[...temp.comments, {Text: val,time:new Date().toISOString() ,user: { ...temp.user }} ]\r\n    // ele.comments.push({ Text: val, user: { ...ele.user } })\r\n      \r\n    setPost({...temp})\r\n    let data=await postComment(postid,val)\r\n    if(data.error){\r\n      setPost({...tempPost})\r\n      props.getPosts()\r\n      alert(\"Something went wrong\")\r\n    }\r\n  }\r\n  // ---------------\r\n  return (\r\n\r\n    <div className=\"Postdetail\">\r\n      {post['Title'] === undefined ? <div><Skeleton height=\"400px\" />\r\n      </div> :\r\n        \r\n          <Post postcomment={onPost} post={post}>\r\n          <Comments home={false} comments={post.comments}></Comments>\r\n          </Post>\r\n       \r\n      } \r\n    </div>\r\n  )\r\n\r\n}\r\nconst mapActionsToProps=(dispatch)=>{\r\n  return({\r\n      getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n  })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n  return({\r\n      posts:state.posts\r\n  })\r\n}\r\nexport default withRouter(connect(mapActionsToState,mapActionsToProps)(Postdetail))","import { Avatar, Button, Text } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport {FaUserPlus} from 'react-icons/fa'\r\nimport Posts from '../Posts'\r\nimport { Redirect } from 'react-router'\r\nconst Profile = (props) => {\r\n    const [user, setUser] = useState({})\r\n    useEffect(() => {\r\n        if(typeof props.location.state !=='undefined'){\r\n            setUser(props.location.state.user)\r\n        }\r\n        \r\n    }, [props.location])\r\n    if(typeof props.location.state ==='undefined'){\r\n        return(<Redirect to='/home'></Redirect>)\r\n    }\r\n    return (\r\n        <div>\r\n            {/* \"data\" in props.user &&  */Object.keys(user).length !== 0 ?\r\n                <div style={{ width: \"50%\", margin: \"100px auto\" }}>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\r\n                        <div style={{ border: \"3px solid #17b890\", borderRadius: 100, padding: 10 }}><Avatar size=\"2xl\" name={user.Name} src={user.image}></Avatar></div>\r\n                        <Text style={{ fontWeight: 500 }} fontSize=\"4xl\">{user.Name}</Text>\r\n                        <Button style={{marginTop:10,fontSize:15}} leftIcon={<FaUserPlus />} colorScheme=\"blue\" variant=\"outline\">\r\n                            Follow\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-evenly\",marginTop:50,marginBottom:50,border:\"1px solid rgb(197 226 219)\",padding:20,borderRadius:20}}>\r\n                    <div style={{textAlign:\"center\"}}><Text style={{fontWeight:500}} fontSize=\"lg\">Total Posts</Text><Text style={{color:\"#17b890\",fontWeight:700}}>{user.posts.length}</Text></div>\r\n                    <div style={{textAlign:\"center\"}}><Text style={{fontWeight:500}} fontSize=\"lg\">Followers</Text><Text style={{color:\"#17b890\",fontWeight:700}}>{user.followers.length}</Text></div>\r\n                    <div style={{textAlign:\"center\"}}><Text style={{fontWeight:500}} fontSize=\"lg\">Following</Text><Text style={{color:\"#17b890\",fontWeight:700}}>{user.following.length}</Text></div>\r\n                    </div>\r\n                    <div style={{marginTop:20}}>\r\n                    <Posts profile={user._id}></Posts>\r\n                    </div>\r\n                </div>\r\n                \r\n                : <div>Nothing</div>}\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        user: state.user\r\n    })\r\n}\r\nconst mapActionToProps = (dispatch) => {\r\n    return ({\r\n        getUser: () => { dispatch(Actions.getUserThunk()) }\r\n    })\r\n}\r\nexport default connect(mapStateToProps, mapActionToProps)(Profile)","import { Avatar, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { FcSearch } from 'react-icons/fc'\r\nimport './header.css'\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nconst Header = (props) => {\r\nconst [search,setSearch]=useState('')\r\nconst [drop,setDrop]=useState(false)\r\n\r\nuseEffect(()=>{\r\nif(search===''){\r\n    setDrop(false)\r\n}\r\nelse{setDrop(true)}\r\n\r\n},[search])\r\n    return (\r\n        <div style={{ height: 70, backgroundColor: \"#17b890\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", flex: 1, margin: \"0px 50px\", alignItems: \"center\", height: \"100%\" }}>\r\n                <img style={{ width: 150 }} src={`${process.env.PUBLIC_URL}/Logo/header.png`}></img>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", width: 250 }}>\r\n                    <div><InputGroup style={{ width: 200, borderColor: \"#358e62\" }}>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            children={<FcSearch />}\r\n                        />\r\n                        <Input onChange={(e)=>{setSearch(e.target.value)}} className=\"search_box\" type=\"tel\" placeholder=\"Search...\" />\r\n                    </InputGroup>\r\n                    <OutsideClickHandler onOutsideClick={()=>{\r\n                        setDrop(false)\r\n                    }}><div className={!drop?\"dropdown-menu-hidden\":\"dropdown-menu\"}>\r\n                        {props.users.filter((ele)=>{\r\n                            if(ele.Name.includes(search)){\r\n                                return true\r\n                            }\r\n                        }).map((ele)=>{\r\n                            return(\r\n                                <div onClick={()=>{\r\n                                    props.history.push({pathname:'/profile',state:{user:ele}})\r\n                                }} style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:10,cursor:\"pointer\"}}>\r\n                                    <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                                    <Text style={{marginLeft:10}} fontSize=\"sm\">{ele.Name}</Text>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div></OutsideClickHandler>\r\n                    </div>\r\n                    <i onClick={() => {\r\n                        localStorage.clear()\r\n                        props.history.push('/Signin')\r\n                    }} style={{ fontSize: 30, color: \"#082D0F\" }} class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        users:state.users\r\n    })\r\n  }\r\nexport default withRouter(connect(mapActionsToState)(Header))   ","import React, { useState } from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport Home from '../Components/Home'\r\nimport Header from '../Header'\r\nconst PrivateRoute=(props)=>{\r\nconst [token,setToken]=useState(true) \r\n// if(localStorage.getItem(\"token\"))\r\nif(localStorage.getItem(\"x-auth-token\")){\r\n    return(\r\n        <div>\r\n        <Header></Header>\r\n        <Route path={props.path} component={props.component}></Route>\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return(\r\n        <Redirect path='/signin'></Redirect>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport {Switch,Route} from 'react-router-dom'\r\nimport Home from '../Components/Home'\r\nimport Login from '../Components/Login'\r\nimport Postdetail from '../Components/Postdetail'\r\nimport Profile from '../Components/Profile'\r\nimport Signup from '../Components/Signup'\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\nconst Router=(props)=>{\r\nreturn(\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Login}></Route>\r\n        <Route path=\"/Signup\" component={Signup}></Route>\r\n        <Route exact path=\"/Signin\" component={Login}></Route>\r\n        <PrivateRoute path='/home' component={Home}></PrivateRoute>\r\n        <PrivateRoute path='/post/:id' component={Postdetail}></PrivateRoute>\r\n        <PrivateRoute path='/Profile' component={Profile}></PrivateRoute>\r\n    </Switch>\r\n)\r\n}\r\n\r\nexport default Router","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport axios from 'axios'\nimport Login from './Components/Login';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport Signup from './Components/Signup';\nimport Router from './Routes/Router';\n\nfunction App() {\n \n  return (\n    \n    <ChakraProvider>\n    <Router></Router>\n      </ChakraProvider>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState={\r\nuser:{},\r\nposts:[],\r\nusers:[]\r\n}\r\nexport const Reducer=(state=initialState,Action)=>{\r\n   \r\n    switch (Action.type) {\r\n        case \"SIGNIN\":\r\n            return({...state,user:{...Action.payLoad}})\r\n        case \"GET_POSTS\":\r\n            return({...state,posts:[...Action.payLoad]})  \r\n        case \"GET_USERS\":\r\n            return({...state,users:[...Action.payLoad]})  \r\n    }\r\n    return state\r\n \r\n    \r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport { Reducer } from './Reducer/Reducer';\nimport thunk from 'redux-thunk'\nlet store = createStore(Reducer, applyMiddleware(thunk))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}