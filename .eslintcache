[{"D:\\social media\\social-media-react-graphql\\src\\index.js":"1","D:\\social media\\social-media-react-graphql\\src\\App.js":"2","D:\\social media\\social-media-react-graphql\\src\\reportWebVitals.js":"3","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Reducer.js":"4","D:\\social media\\social-media-react-graphql\\src\\Routes\\Router.js":"5","D:\\social media\\social-media-react-graphql\\src\\Components\\Login\\index.js":"6","D:\\social media\\social-media-react-graphql\\src\\Components\\Signup\\index.js":"7","D:\\social media\\social-media-react-graphql\\src\\Routes\\PrivateRoute.js":"8","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Actions.js":"9","D:\\social media\\social-media-react-graphql\\src\\Components\\Home\\index.js":"10","D:\\social media\\social-media-react-graphql\\src\\Components\\Postdetail\\index.js":"11","D:\\social media\\social-media-react-graphql\\src\\Components\\Profile\\index.js":"12","D:\\social media\\social-media-react-graphql\\src\\API\\Api.js":"13","D:\\social media\\social-media-react-graphql\\src\\Firebase\\firebase.js":"14","D:\\social media\\social-media-react-graphql\\src\\API\\calls.js":"15","D:\\social media\\social-media-react-graphql\\src\\Header\\index.js":"16","D:\\social media\\social-media-react-graphql\\src\\Components\\Posts\\index.js":"17","D:\\social media\\social-media-react-graphql\\src\\Components\\Comments\\index.js":"18","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\index.js":"19","D:\\social media\\social-media-react-graphql\\src\\ApolloClient\\index.js":"20","D:\\social media\\social-media-react-graphql\\src\\Components\\NewPost\\index.js":"21","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\PostModel.js":"22","D:\\social media\\social-media-react-graphql\\src\\Components\\Comment\\index.js":"23","D:\\social media\\social-media-react-graphql\\src\\Interceptor.js":"24","D:\\social media\\social-media-react-graphql\\src\\ErrorBoundaryFallback.js":"25"},{"size":884,"mtime":1615534115741,"results":"26","hashOfConfig":"27"},{"size":675,"mtime":1615534099192,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1615304083011,"results":"29","hashOfConfig":"27"},{"size":436,"mtime":1615304083005,"results":"30","hashOfConfig":"27"},{"size":834,"mtime":1615304083007,"results":"31","hashOfConfig":"27"},{"size":2174,"mtime":1615530243214,"results":"32","hashOfConfig":"27"},{"size":4831,"mtime":1615535276976,"results":"33","hashOfConfig":"27"},{"size":575,"mtime":1615304083006,"results":"34","hashOfConfig":"27"},{"size":1127,"mtime":1615530243217,"results":"35","hashOfConfig":"27"},{"size":392,"mtime":1615304082987,"results":"36","hashOfConfig":"27"},{"size":1814,"mtime":1615530243214,"results":"37","hashOfConfig":"27"},{"size":5258,"mtime":1615551182984,"results":"38","hashOfConfig":"27"},{"size":105,"mtime":1615304082979,"results":"39","hashOfConfig":"27"},{"size":427,"mtime":1615304083002,"results":"40","hashOfConfig":"27"},{"size":9597,"mtime":1615549773371,"results":"41","hashOfConfig":"27"},{"size":3237,"mtime":1615401928475,"results":"42","hashOfConfig":"27"},{"size":2289,"mtime":1615547064512,"results":"43","hashOfConfig":"27"},{"size":611,"mtime":1615530243212,"results":"44","hashOfConfig":"27"},{"size":5873,"mtime":1615547088751,"results":"45","hashOfConfig":"27"},{"size":176,"mtime":1615304082981,"results":"46","hashOfConfig":"27"},{"size":5888,"mtime":1615304082994,"results":"47","hashOfConfig":"27"},{"size":1366,"mtime":1615304082996,"results":"48","hashOfConfig":"27"},{"size":1067,"mtime":1615534577534,"results":"49","hashOfConfig":"27"},{"size":518,"mtime":1615533008572,"results":"50","hashOfConfig":"27"},{"size":179,"mtime":1615534075425,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x8e4tp",{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\social media\\social-media-react-graphql\\src\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\App.js",["112","113","114","115","116","117"],"D:\\social media\\social-media-react-graphql\\src\\reportWebVitals.js",[],["118","119"],"D:\\social media\\social-media-react-graphql\\src\\Reducer\\Reducer.js",["120"],"\r\nconst initialState={\r\nuser:{},\r\nposts:[],\r\nusers:[]\r\n}\r\nexport const Reducer=(state=initialState,Action)=>{\r\n   \r\n    switch (Action.type) {\r\n        case \"SIGNIN\":\r\n            return({...state,user:{...Action.payLoad}})\r\n        case \"GET_POSTS\":\r\n            return({...state,posts:[...Action.payLoad]})  \r\n        case \"GET_USERS\":\r\n            return({...state,users:[...Action.payLoad]})  \r\n    }\r\n    return state\r\n \r\n    \r\n\r\n}","D:\\social media\\social-media-react-graphql\\src\\Routes\\Router.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Login\\index.js",["121","122","123"],"import React, { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport { Button, Input, InputGroup, InputRightElement, Text } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { connect } from 'react-redux'\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"x-auth-token\") && localStorage.getItem(\"x-auth-token\") !== \"\") {\r\n            props.history.push('/home')\r\n        }\r\n    }, [props])\r\n    const handleHide = () => setShow(!show)\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_holder\">\r\n                <img src={process.env.PUBLIC_URL + '/Logo/dark.png'}></img>\r\n                <Text fontSize=\"2xl\">Signup</Text>\r\n                <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <InputGroup size=\"md\">\r\n                    <Input\r\n                        pr=\"4.5rem\"\r\n                        type={show ? \"text\" : \"password\"}\r\n                        placeholder=\"Enter Password\"\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleHide}>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                        </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n                <Button onClick={() => {\r\n                    props.signin({ email: email, password: password })\r\n                }} colorScheme=\"blue\">Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n    return ({\r\n        signin: (data) => { dispatch(Actions.signinAction(data)) }\r\n    })\r\n}\r\nconst mapActionsToState = (state) => {\r\n    return ({\r\n        user: state.user\r\n    })\r\n}\r\nexport default connect(mapActionsToState, mapActionsToProps)(Login)","D:\\social media\\social-media-react-graphql\\src\\Components\\Signup\\index.js",["124","125","126"],"D:\\social media\\social-media-react-graphql\\src\\Routes\\PrivateRoute.js",["127","128","129"],"import React, { useState } from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport Home from '../Components/Home'\r\nimport Header from '../Header'\r\nconst PrivateRoute=(props)=>{\r\nconst [token,setToken]=useState(true) \r\n// if(localStorage.getItem(\"token\"))\r\nif(localStorage.getItem(\"x-auth-token\")){\r\n    return(\r\n        <div>\r\n        <Header></Header>\r\n        <Route path={props.path} component={props.component}></Route>\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return(\r\n        <Redirect path='/signin'></Redirect>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default PrivateRoute","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Actions.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Home\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Postdetail\\index.js",["130","131","132","133","134","135","136"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Divider, Input, Skeleton, Text } from '@chakra-ui/react'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport './Postdetail.css'\r\nimport Post from '../Post'\r\nimport Comments from '../Comments'\r\nimport { getPost, postComment } from '../../API/calls'\r\nimport { connect } from 'react-redux'\r\nconst Postdetail = (props) => {\r\n  const [post, setPost] = useState({})\r\n  useEffect(() => {\r\n    const getPostDetail = async () => {\r\n      let data = await getPost(props.match.params.id)\r\n      setPost(data)\r\n    }\r\n    getPostDetail()\r\n  }, [])\r\n  // ----------------\r\n  const onPost = async (val, postid) => {\r\n    let temp = { ...post }\r\n    let tempPost = { ...post }\r\n    temp.comments = [...temp.comments, { Text: val, time: new Date().toISOString(), user: { ...JSON.parse(localStorage.getItem('user_details')) } }]\r\n    setPost({ ...temp })\r\n    let data = await postComment(postid, val)\r\n    if (data.error) {\r\n      setPost({ ...tempPost })\r\n      props.getPosts()\r\n      alert(\"Something went wrong\")\r\n    }\r\n  }\r\n  // ---------------\r\n  return (\r\n    <div className=\"Postdetail\">\r\n      {post['Title'] === undefined ? <div><Skeleton height=\"400px\" />\r\n      </div> :\r\n\r\n        <Post postcomment={onPost} post={post}>\r\n          <Comments home={false} comments={post.comments}></Comments>\r\n        </Post>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n  return ({\r\n    getPosts: () => { dispatch(Actions.getPostsAction()) }\r\n  })\r\n}\r\nconst mapActionsToState = (state) => {\r\n  return ({\r\n    posts: state.posts\r\n  })\r\n}\r\nexport default withRouter(connect(mapActionsToState, mapActionsToProps)(Postdetail))","D:\\social media\\social-media-react-graphql\\src\\Components\\Profile\\index.js",["137","138","139"],"D:\\social media\\social-media-react-graphql\\src\\API\\Api.js",[],"D:\\social media\\social-media-react-graphql\\src\\Firebase\\firebase.js",[],"D:\\social media\\social-media-react-graphql\\src\\API\\calls.js",["140"],"import { Api } from \"./Api\"\r\nimport Axios from 'axios'\r\nexport const signin = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios({\r\n      url: Api,\r\n      method: 'post',\r\n      data: {\r\n        query: `\r\n    mutation{\r\n        signin(email:\"${data.email}\",pass:\"${data.password}\")\r\n        }\r\n      `\r\n      }\r\n    }).then((result) => {\r\n      if (\"errors\" in result.data) {\r\n        alert(\"Incorrect username or password\")\r\n        reject(result.data.errors[0].message)\r\n      } else {\r\n        localStorage.setItem(\"x-auth-token\", result.data.data.signin)\r\n        localStorage.setItem(\"user_email\", data.email)\r\n        let user = getUserSignin(data.email)\r\n        resolve(user)\r\n      }\r\n\r\n    }).catch(err => {\r\n      alert(\"Incorrect username or password\")\r\n      reject(err)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\nexport const getUser = async (email) => {\r\n\r\n  try {\r\n    let data = await Axios.post(Api, {\r\n      query: `mutation{\r\n            getUser(email:\"${email}\"){\r\n                Name\r\n                _id\r\n                image\r\n                email\r\n                followers{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                following{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                Age\r\n                \r\n                posts{\r\n                    _id\r\n                    Title\r\n                    Body\r\n                    Image\r\n                    user{\r\n                      Name\r\n                      image\r\n                      _id\r\n                      \r\n                    }\r\n                    Likes{\r\n                        _id\r\n                        Name\r\n                        image\r\n                    }\r\n                    comments{\r\n                        Text\r\n                        time\r\n                        user{\r\n                            _id\r\n                            Name\r\n                            image\r\n                            email\r\n                        }\r\n                    }\r\n                    time\r\n                }\r\n\r\n          }\r\n}`\r\n    }\r\n      , {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n        }\r\n      }\r\n    ) \r\n    console.log(data.data.data.getUser)\r\n    // localStorage.setItem(\"user_details\", JSON.stringify(data.data.data.getUser))\r\n    return data\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport const getUserSignin = async (email) => {\r\n\r\n  try {\r\n    let data = await Axios.post(Api, {\r\n      query: `mutation{\r\n            getUser(email:\"${email}\"){\r\n                Name\r\n                _id\r\n                image\r\n                email\r\n                followers{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                following{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                Age\r\n                \r\n                posts{\r\n                    _id\r\n                    Title\r\n                    Body\r\n                    Image\r\n                    user{\r\n                      Name\r\n                      image\r\n                      _id\r\n                      \r\n                    }\r\n                    Likes{\r\n                        _id\r\n                        Name\r\n                        image\r\n                    }\r\n                    comments{\r\n                        Text\r\n                        time\r\n                        user{\r\n                            _id\r\n                            Name\r\n                            image\r\n                            email\r\n                        }\r\n                    }\r\n                    time\r\n                }\r\n\r\n          }\r\n}`\r\n    }\r\n      , {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n        }\r\n      }\r\n    )\r\n    console.log(data.data.data.getUser)\r\n    localStorage.setItem(\"user_details\", JSON.stringify(data.data.data.getUser))\r\n    return data\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport const getPosts = () => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let data = Axios.post(Api, {\r\n      query: `\r\n          query{\r\n              getPosts{\r\n                Title\r\n                Body\r\n                Image\r\n                _id\r\n                Likes{\r\n                  Name\r\n                  _id\r\n                  image\r\n                }\r\n                user{\r\n                  Name\r\n                  _id\r\n                  email\r\n                  image\r\n                  followers{\r\n                    _id\r\n                    Name\r\n                    image\r\n                  }\r\n                  following{\r\n                    _id\r\n                    Name\r\n                    image\r\n                  }\r\n                  posts{\r\n                    _id\r\n                  }\r\n                }\r\n                comments{\r\n                  Text\r\n                  time\r\n                  user{\r\n                    Name\r\n                    _id\r\n                    email\r\n                    image\r\n                    followers{\r\n                      _id\r\n                      Name\r\n                      image\r\n                    }\r\n                    following{\r\n                      _id\r\n                      Name\r\n                      image\r\n                    }\r\n                    posts{\r\n                      _id\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n  `\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((data) => {\r\n\r\n      resolve([...data.data.data.getPosts])\r\n    }).catch(err => {\r\n      alert(err)\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\nexport const postComment = (postid, val) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios.post(Api, {\r\n      query: `\r\n            mutation{\r\n              createComment(pid:\"${postid}\",text:\"${val}\",time:\"${new Date().toISOString()}\"){\r\n                Text\r\n                user{\r\n                  Name\r\n                }\r\n              }\r\n            }\r\n      `\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((data) => {\r\n      resolve(data)\r\n    }).catch(err => {\r\n      alert(err)\r\n    })\r\n  })\r\n\r\n}\r\n\r\n\r\nexport const getPost = (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios.post(Api, {\r\n      query: `mutation{\r\n                        getPost(id:\"${id}\"){\r\n                          Title\r\n                          _id\r\n                          Body\r\n                          Image\r\n                          user{\r\n                            Name\r\n                            _id\r\n                            image\r\n                            email\r\n                          }\r\n                          comments{\r\n                            time\r\n                              Text\r\n                            user{\r\n                              image\r\n                              Name\r\n                              _id\r\n                              email\r\n                            }\r\n                          }\r\n                          Likes{\r\n                            Name\r\n                            image\r\n                            _id\r\n                          }\r\n                          \r\n                        }\r\n                      }`\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((data) => {\r\n      resolve(data.data.data.getPost)\r\n    }).catch(err => {\r\n      alert(err)\r\n      reject(err)\r\n    })\r\n  })\r\n\r\n}\r\n\r\nexport const createPost = (data) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios.post(Api, {\r\n      query: `\r\n          mutation{\r\n            createPost(title:\"${data.title}\",body:\"${data.body}\",Image:\"${data.Image}\",time:\"${data.time}\"){\r\n              Title\r\n              _id\r\n              user{\r\n                Name\r\n              }\r\n              comments{\r\n                id\r\n              }\r\n            }\r\n          }\r\n    `\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((data) => {\r\n      resolve(data)\r\n    }).catch((err) => {\r\n      alert(err)\r\n    })\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\nexport const getUsers = () => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios.post(Api, {\r\n      query: `query{\r\n        getUsers{\r\n          Name\r\n          _id\r\n          image\r\n          email\r\n          followers{\r\n              Name\r\n              _id\r\n              image\r\n          }\r\n          following{\r\n              Name\r\n              _id\r\n              image\r\n          }\r\n          Age\r\n          posts{\r\n              _id\r\n              Title\r\n              Body\r\n              Image\r\n              Likes{\r\n                  _id\r\n                  Name\r\n                  image\r\n              }\r\n              comments{\r\n                  Text\r\n                  time\r\n                  user{\r\n                      _id\r\n                      Name\r\n                      image\r\n                      email\r\n                  }\r\n              }\r\n              time\r\n          }\r\n\r\n    }\r\n      }`\r\n    }, {\r\n      headers: {\r\n        \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n      }\r\n    }).then((res) => {\r\n      resolve(res)\r\n    }).catch(err => {\r\n      alert(err)\r\n    })\r\n  })\r\n}","D:\\social media\\social-media-react-graphql\\src\\Header\\index.js",["141","142","143"],"import { Avatar, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ImSearch } from 'react-icons/im'\r\nimport './header.css'\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nconst Header = (props) => {\r\nconst [search,setSearch]=useState('')\r\nconst [drop,setDrop]=useState(false)\r\n\r\nuseEffect(()=>{\r\nif(search===''){\r\n    setDrop(false)\r\n}\r\nelse{setDrop(true)}\r\n\r\n},[search])\r\n    return (\r\n        <div style={{ backgroundColor: \"#1a202c\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", flex: 1, margin: \"0px 50px\", alignItems: \"center\", height: \"100%\" }}>\r\n                <img onClick={()=>{props.history.push('/home')}} style={{ height: 80,cursor:\"pointer\" }} src={`${process.env.PUBLIC_URL}/Logo/header.png`}></img>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", width: 250 }}>\r\n                    <div><InputGroup style={{ width: 200, borderColor: \"#c6f6d5\" }}>\r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            children={<ImSearch style={{color:\"#c6f6d5\"}} />}\r\n                        />\r\n                        <Input  onChange={(e)=>{setSearch(e.target.value)}} className=\"search_box\" type=\"tel\" placeholder=\"Search...\" />\r\n                    </InputGroup>\r\n                    <OutsideClickHandler onOutsideClick={()=>{\r\n                        setDrop(false)\r\n                    }}><div className={!drop?\"dropdown-menu-hidden\":\"dropdown-menu\"}>\r\n                        {props.users.filter((ele)=>{\r\n                            if(ele.Name.toLowerCase().includes(search.toLowerCase())){\r\n                                return true\r\n                            }\r\n                        }).map((ele)=>{\r\n                            // console.log(ele)\r\n                            return(\r\n                                <div onClick={()=>{\r\n                                    props.history.push({pathname:'/profile',state:{user:ele.email}})\r\n                                }} style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:10,cursor:\"pointer\"}}>\r\n                                    <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                                    <Text style={{marginLeft:10}} fontSize=\"sm\">{ele.Name}</Text>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div></OutsideClickHandler>\r\n                    </div>\r\n                    <i onClick={() => {\r\n                        localStorage.clear()\r\n                        props.history.push('/Signin')\r\n                    }} style={{ fontSize: 30, color: \"#c6f6d5\" }} class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        users:state.users\r\n    })\r\n  }\r\nexport default withRouter(connect(mapActionsToState)(Header))   ","D:\\social media\\social-media-react-graphql\\src\\Components\\Posts\\index.js",["144","145","146","147","148","149"],"D:\\social media\\social-media-react-graphql\\src\\Components\\Comments\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\index.js",["150","151","152"],"D:\\social media\\social-media-react-graphql\\src\\ApolloClient\\index.js",[],["153","154"],"D:\\social media\\social-media-react-graphql\\src\\Components\\NewPost\\index.js",["155","156","157","158"],"import { Avatar, Button, Divider, Input, Skeleton } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { MdTitle } from 'react-icons/md'\r\nimport { GoRocket } from 'react-icons/go'\r\nimport { BsImageAlt } from 'react-icons/bs'\r\nimport firebase from '../../Firebase/firebase'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {createPost} from '../../API/calls'\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport './NewPost.css'\r\nconst NewPost = (props) => {\r\n    const toast = useToast()\r\n    const [user, setUser] = useState({})\r\n    const [titleInput, setTitleInput] = useState(false)\r\n    const [image, setImage] = useState(null)\r\n    const [title,setTitle]=useState('')\r\n    const [body,setBody]=useState('')\r\n    console.log(localStorage.getItem('user_email'))\r\n    useEffect(() => {\r\n        props.getUser()\r\n        \r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(props.user)\r\n        if (\"data\" in props.user && !(\"error\" in props.user.data)) {\r\n\r\n            setUser(props.user.data.data.getUser)\r\n        }\r\n    }, [props.user])\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n    const Post=async()=>{\r\n        let res=null\r\n        if(image){\r\n            let filename=uuidv4()\r\n            res=await uploadImage(filename)\r\n        }\r\n        \r\n        let data={\r\n            Image:image?res:\"\",\r\n            body:body,\r\n            title:title,\r\n            time:new Date()\r\n        }\r\n        let result=await createPost(data)\r\n        props.getPosts()\r\n        clear()\r\n        toast({\r\n            title: \"Posted successfully.\",\r\n            \r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n\r\n    }\r\n    const clear=()=>{\r\n        setImage(null)\r\n        setTitle('')\r\n        setTitleInput(false)\r\n        setBody('')\r\n    }\r\n    return (<div>{\r\n        Object.keys(user).length !== 0 ? <div className=\"newPostHolder\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"newpost\">\r\n                <Avatar size=\"md\" name={user.Name} src={user.image} />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", padding: 10 }}>\r\n                    {image ? <img style={{ marginBottom: 10 }} src={URL.createObjectURL(image)}></img> : null}\r\n                    <Input value={body} onChange={(e)=>{setBody(e.target.value)}} style={{ borderRadius: 15, height: 75, marginLeft: 10 }} placeholder={`What's on your mind, ${user.Name.split(' ')[0]} ?`} size=\"lg\" />\r\n                    <Input value={title} onChange={(e)=>{setTitle(e.target.value)}} placeholder=\"Enter title\" style={{ visibility: titleInput ? \"visible\" : \"hidden\", height: titleInput ? 50 : 0, borderRadius: 15, marginLeft: 10, marginTop: 20, transition: \"height 0.2s,visibility 0.1s\" }}></Input>\r\n                </div>\r\n            </div>\r\n            <Divider></Divider>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\", marginTop: 15, marginBottom: 15 }}>\r\n                <Button onClick={() => { setTitleInput(!titleInput) }} variant=\"ghost\" colorScheme=\"green\" leftIcon={<MdTitle />}>\r\n                    Add Title\r\n                </Button>\r\n                <Button onClick={() => {\r\n                    document.getElementById(\"image_select\").click()\r\n                }} type='file' variant=\"ghost\" colorScheme=\"red\" leftIcon={<BsImageAlt />}>\r\n                    Add Image\r\n                </Button>\r\n                <Button onClick={Post} variant=\"ghost\" colorScheme=\"blue\" leftIcon={<GoRocket />}>\r\n                    POST\r\n                </Button>\r\n                <input id=\"image_select\" onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                }} type=\"file\" style={{ display: \"none\" }}></input>\r\n\r\n            </div>\r\n        </div> : <div><Skeleton height=\"400px\" /></div>\r\n    }</div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            user: state.user\r\n        }\r\n    )\r\n}\r\nconst mapActionsToState = (dispatch) => {\r\n    return (\r\n        {\r\n            getUser: () => {dispatch(Actions.getUserThunk(localStorage.getItem(\"user_email\"))) },\r\n            getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n        }\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapActionsToState)(NewPost)","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\PostModel.js",["159"],"import React from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Divider,\r\n    Avatar,\r\n    Text,\r\n  } from \"@chakra-ui/react\"\r\n\r\nconst PostModel=(props)=>{\r\n    \r\nreturn(\r\n    <>\r\n    <Modal isOpen={props.open} onClose={props.close}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Liked By</ModalHeader>\r\n        <ModalCloseButton />\r\n        <Divider></Divider>\r\n        <ModalBody>\r\n          <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n              {props.Likes.map((ele)=>{\r\n                  return(\r\n                      <div style={{display:\"flex\",flexDirection:'row',marginBottom:15,marginTop:15}}>\r\n                          <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                          <Text fontSize=\"md\" style={{ fontWeight: 600, marginLeft: 10 }}>{ele.Name}</Text>\r\n                      </div>\r\n                  )\r\n              })}\r\n          </div>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          {/* <Button colorScheme=\"blue\" mr={3} onClick={props.close}>\r\n            Close\r\n          </Button> */}\r\n          {/* <Button variant=\"ghost\">Secondary Action</Button> */}\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n)\r\n}\r\n\r\nexport default PostModel","D:\\social media\\social-media-react-graphql\\src\\Components\\Comment\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Interceptor.js",[],"D:\\social media\\social-media-react-graphql\\src\\ErrorBoundaryFallback.js",[],{"ruleId":"160","severity":1,"message":"161","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":12},{"ruleId":"160","severity":1,"message":"164","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":19},{"ruleId":"160","severity":1,"message":"165","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"166","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"167","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":14},{"ruleId":"160","severity":1,"message":"168","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":19},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":9,"column":5,"nodeType":"175","messageId":"176","endLine":16,"endColumn":6},{"ruleId":"160","severity":1,"message":"165","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"177","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":21,"column":17,"nodeType":"180","endLine":21,"endColumn":70},{"ruleId":"160","severity":1,"message":"164","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":30,"column":21,"nodeType":"175","messageId":"176","endLine":37,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":55,"column":17,"nodeType":"180","endLine":55,"endColumn":83},{"ruleId":"160","severity":1,"message":"181","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":12},{"ruleId":"160","severity":1,"message":"182","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"183","line":6,"column":14,"nodeType":"162","messageId":"163","endLine":6,"endColumn":22},{"ruleId":"160","severity":1,"message":"184","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"185","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":16},{"ruleId":"160","severity":1,"message":"186","line":4,"column":18,"nodeType":"162","messageId":"163","endLine":4,"endColumn":25},{"ruleId":"160","severity":1,"message":"187","line":4,"column":27,"nodeType":"162","messageId":"163","endLine":4,"endColumn":32},{"ruleId":"160","severity":1,"message":"188","line":4,"column":44,"nodeType":"162","messageId":"163","endLine":4,"endColumn":48},{"ruleId":"160","severity":1,"message":"177","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":20,"column":6,"nodeType":"191","endLine":20,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":23,"column":54,"nodeType":"195","messageId":"196","endLine":23,"endColumn":56},{"ruleId":"189","severity":1,"message":"197","line":34,"column":8,"nodeType":"191","endLine":34,"endColumn":24,"suggestions":"198"},{"ruleId":"193","severity":1,"message":"194","line":74,"column":39,"nodeType":"195","messageId":"196","endLine":74,"endColumn":41},{"ruleId":"160","severity":1,"message":"199","line":174,"column":9,"nodeType":"162","messageId":"163","endLine":174,"endColumn":13},{"ruleId":"160","severity":1,"message":"200","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":9},{"ruleId":"178","severity":1,"message":"179","line":24,"column":17,"nodeType":"180","endLine":24,"endColumn":156},{"ruleId":"193","severity":1,"message":"201","line":36,"column":50,"nodeType":"195","messageId":"202","endLine":36,"endColumn":52},{"ruleId":"160","severity":1,"message":"184","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"177","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"189","severity":1,"message":"203","line":20,"column":5,"nodeType":"191","endLine":20,"endColumn":7,"suggestions":"204"},{"ruleId":"189","severity":1,"message":"205","line":26,"column":6,"nodeType":"191","endLine":26,"endColumn":19,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"194","line":36,"column":21,"nodeType":"195","messageId":"196","endLine":36,"endColumn":23},{"ruleId":"207","severity":1,"message":"208","line":37,"column":19,"nodeType":"209","messageId":"210","endLine":37,"endColumn":21},{"ruleId":"193","severity":1,"message":"201","line":24,"column":42,"nodeType":"195","messageId":"202","endLine":24,"endColumn":44},{"ruleId":"189","severity":1,"message":"211","line":40,"column":6,"nodeType":"191","endLine":40,"endColumn":24,"suggestions":"212"},{"ruleId":"178","severity":1,"message":"179","line":131,"column":32,"nodeType":"180","endLine":131,"endColumn":71},{"ruleId":"169","replacedBy":"213"},{"ruleId":"171","replacedBy":"214"},{"ruleId":"189","severity":1,"message":"203","line":24,"column":8,"nodeType":"191","endLine":24,"endColumn":10,"suggestions":"215"},{"ruleId":"173","severity":1,"message":"174","line":43,"column":21,"nodeType":"175","messageId":"176","endLine":50,"endColumn":22},{"ruleId":"160","severity":1,"message":"216","line":76,"column":13,"nodeType":"162","messageId":"163","endLine":76,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":99,"column":30,"nodeType":"180","endLine":99,"endColumn":97},{"ruleId":"160","severity":1,"message":"185","line":10,"column":5,"nodeType":"162","messageId":"163","endLine":10,"endColumn":11},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Interceptor' is defined but never used.","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Api' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Home' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'Text' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["219"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loggedin_user._id' and 'props'. Either include them or remove the dependency array.",["220"],"'data' is assigned a value but never used.","'_' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["221"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["222"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["223"],["217"],["218"],["224"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"229","fix":"235"},"Update the dependencies array to be: [props.match.params.id]",{"range":"236","text":"237"},"Update the dependencies array to be: [loggedin_user._id, props, props.location]",{"range":"238","text":"239"},"Update the dependencies array to be: [props]",{"range":"240","text":"241"},"Update the dependencies array to be: [props, props.posts]",{"range":"242","text":"243"},"Update the dependencies array to be: [props.user, post, user._id]",{"range":"244","text":"245"},{"range":"246","text":"241"},[714,716],"[props.match.params.id]",[1319,1335],"[loggedin_user._id, props, props.location]",[570,572],"[props]",[688,701],"[props, props.posts]",[1229,1247],"[props.user, post, user._id]",[950,952]]