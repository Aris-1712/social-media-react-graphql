[{"D:\\social media\\social-media-react-graphql\\src\\index.js":"1","D:\\social media\\social-media-react-graphql\\src\\App.js":"2","D:\\social media\\social-media-react-graphql\\src\\reportWebVitals.js":"3","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Reducer.js":"4","D:\\social media\\social-media-react-graphql\\src\\Routes\\Router.js":"5","D:\\social media\\social-media-react-graphql\\src\\Components\\Login\\index.js":"6","D:\\social media\\social-media-react-graphql\\src\\Components\\Signup\\index.js":"7","D:\\social media\\social-media-react-graphql\\src\\Routes\\PrivateRoute.js":"8","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Actions.js":"9","D:\\social media\\social-media-react-graphql\\src\\Components\\Home\\index.js":"10","D:\\social media\\social-media-react-graphql\\src\\Components\\Postdetail\\index.js":"11","D:\\social media\\social-media-react-graphql\\src\\Components\\Profile\\index.js":"12","D:\\social media\\social-media-react-graphql\\src\\API\\Api.js":"13","D:\\social media\\social-media-react-graphql\\src\\Firebase\\firebase.js":"14","D:\\social media\\social-media-react-graphql\\src\\API\\calls.js":"15","D:\\social media\\social-media-react-graphql\\src\\Header\\index.js":"16","D:\\social media\\social-media-react-graphql\\src\\Components\\Posts\\index.js":"17","D:\\social media\\social-media-react-graphql\\src\\Components\\Comments\\index.js":"18","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\index.js":"19","D:\\social media\\social-media-react-graphql\\src\\ApolloClient\\index.js":"20","D:\\social media\\social-media-react-graphql\\src\\Components\\NewPost\\index.js":"21","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\PostModel.js":"22","D:\\social media\\social-media-react-graphql\\src\\Components\\Comment\\index.js":"23"},{"size":880,"mtime":1615304083009,"results":"24","hashOfConfig":"25"},{"size":441,"mtime":1615304082982,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1615304083011,"results":"27","hashOfConfig":"25"},{"size":436,"mtime":1615304083005,"results":"28","hashOfConfig":"25"},{"size":834,"mtime":1615304083007,"results":"29","hashOfConfig":"25"},{"size":2654,"mtime":1615304082989,"results":"30","hashOfConfig":"25"},{"size":4818,"mtime":1615304083001,"results":"31","hashOfConfig":"25"},{"size":575,"mtime":1615304083006,"results":"32","hashOfConfig":"25"},{"size":1095,"mtime":1615401928475,"results":"33","hashOfConfig":"25"},{"size":392,"mtime":1615304082987,"results":"34","hashOfConfig":"25"},{"size":1833,"mtime":1615304082998,"results":"35","hashOfConfig":"25"},{"size":3190,"mtime":1615403811055,"results":"36","hashOfConfig":"25"},{"size":105,"mtime":1615304082979,"results":"37","hashOfConfig":"25"},{"size":427,"mtime":1615304083002,"results":"38","hashOfConfig":"25"},{"size":8268,"mtime":1615404083046,"results":"39","hashOfConfig":"25"},{"size":3237,"mtime":1615401928475,"results":"40","hashOfConfig":"25"},{"size":2117,"mtime":1615403491552,"results":"41","hashOfConfig":"25"},{"size":582,"mtime":1615304082986,"results":"42","hashOfConfig":"25"},{"size":6588,"mtime":1615403561176,"results":"43","hashOfConfig":"25"},{"size":176,"mtime":1615304082981,"results":"44","hashOfConfig":"25"},{"size":5888,"mtime":1615304082994,"results":"45","hashOfConfig":"25"},{"size":1366,"mtime":1615304082996,"results":"46","hashOfConfig":"25"},{"size":970,"mtime":1615304082984,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1x8e4tp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\social media\\social-media-react-graphql\\src\\index.js",[],["103","104"],"D:\\social media\\social-media-react-graphql\\src\\App.js",["105","106","107","108","109"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport Login from './Components/Login';\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport Signup from './Components/Signup';\r\nimport Router from './Routes/Router';\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    \r\n    <ChakraProvider>\r\n    <Router></Router>\r\n      </ChakraProvider>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\social media\\social-media-react-graphql\\src\\reportWebVitals.js",[],"D:\\social media\\social-media-react-graphql\\src\\Reducer\\Reducer.js",["110"],"\r\nconst initialState={\r\nuser:{},\r\nposts:[],\r\nusers:[]\r\n}\r\nexport const Reducer=(state=initialState,Action)=>{\r\n   \r\n    switch (Action.type) {\r\n        case \"SIGNIN\":\r\n            return({...state,user:{...Action.payLoad}})\r\n        case \"GET_POSTS\":\r\n            return({...state,posts:[...Action.payLoad]})  \r\n        case \"GET_USERS\":\r\n            return({...state,users:[...Action.payLoad]})  \r\n    }\r\n    return state\r\n \r\n    \r\n\r\n}","D:\\social media\\social-media-react-graphql\\src\\Routes\\Router.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Login\\index.js",["111","112","113"],"import React, { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport { Button, Input, InputGroup, InputRightElement, Text } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { connect } from 'react-redux'\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"x-auth-token\") && localStorage.getItem(\"x-auth-token\")!==\"\"){\r\n            props.history.push('/home')\r\n        }\r\n    },[props])\r\n    const handleHide = () => setShow(!show)\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_holder\">\r\n                <img src={process.env.PUBLIC_URL+'/Logo/dark.png'}></img>\r\n                <Text fontSize=\"2xl\">Signup</Text>\r\n            <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n            <InputGroup size=\"md\">\r\n                <Input\r\n                    pr=\"4.5rem\"\r\n                    type={show ? \"text\" : \"password\"}\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={(e) => { setPassword(e.target.value) }}\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleHide}>\r\n                        {show ? \"Hide\" : \"Show\"}\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n            <Button onClick={() => {\r\n                props.signin({email:email,password:password})\r\n            //     axios({\r\n            //         url: Api,\r\n            //         method: 'post',\r\n            //         data: {\r\n            //             query: `\r\n            // mutation{\r\n            //     signin(email:\"${email}\",pass:\"${password}\")\r\n            //     }\r\n            //   `\r\n            //         }\r\n            //     }).then((result) => {\r\n            //         localStorage.setItem(\"x-auth-token\",result.data.data.signin)\r\n            //         props.history.push('/home')\r\n            //         // console.log(result)\r\n            //     });\r\n            }} colorScheme=\"blue\">Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapActionsToProps=(dispatch)=>{\r\n    return({\r\n        signin:(data)=>{dispatch(Actions.signinAction(data))}\r\n    })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        user:state.user\r\n    })\r\n}\r\nexport default connect(mapActionsToState,mapActionsToProps)(Login)","D:\\social media\\social-media-react-graphql\\src\\Components\\Signup\\index.js",["114","115","116"],"import React, { useEffect, useState } from 'react'\r\nimport './Signup.css'\r\nimport { Avatar, Button, Input, InputGroup, InputRightElement, Text } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport firebase from '../../Firebase/firebase'\r\nconst Signup = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [imageTempUrl,setImageTempUrl]=useState('')\r\n    \r\n    const [image,setImage]=useState()\r\n    const handleHide = () => setShow(!show)\r\n\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n   \r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"signup_holder\">\r\n                <img src={process.env.PUBLIC_URL + '/Logo/dark.png'}></img>\r\n                <Text fontSize=\"2xl\">Signup</Text>\r\n                <Avatar onClick={()=>{\r\n                    document.getElementById(\"profile_pic\").click()\r\n                    \r\n                }} size=\"2xl\" name={name} src={imageTempUrl}/>\r\n                <input onChange={(e)=>{\r\n                    setImage(e.target.files[0])\r\n                    setImageTempUrl(URL.createObjectURL(e.target.files[0]))\r\n                }}  id=\"profile_pic\" type=\"file\" style={{display:\"none\"}}></input>\r\n                <Input placeholder=\"Enter Name\" size=\"md\" onChange={(e) => { setName(e.target.value) }} />\r\n                <Input placeholder=\"Enter Age\" size=\"md\" onChange={(e) => { setAge(e.target.value) }} />\r\n                <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <InputGroup size=\"md\">\r\n                    <Input\r\n                        pr=\"4.5rem\"\r\n                        type={ show ? \"text\" : \"password\" }\r\n                        placeholder=\"Enter Password\"\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={ handleHide }>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                        </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n                <Button onClick={async() => {\r\n                    let filename=uuidv4()\r\n                    let res=await uploadImage(filename)\r\n                    axios({\r\n                        url: Api,\r\n                        method: 'post',\r\n                        data: {\r\n                            query: `\r\n                        mutation{\r\n                            createUser(email:\"${email}\",Age:${age},name:\"${name}\",password:\"${password}\",image:\"${res}\"){\r\n                              Name\r\n                              _id\r\n                              Age\r\n                            }\r\n                          }\r\n              `\r\n                        }\r\n                    }).then((result) => {\r\n                        localStorage.setItem(\"user\", result.data)\r\n                        props.history.push('/signin')\r\n                    });\r\n                }} colorScheme=\"blue\">Signup</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup","D:\\social media\\social-media-react-graphql\\src\\Routes\\PrivateRoute.js",["117","118","119"],"import React, { useState } from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport Home from '../Components/Home'\r\nimport Header from '../Header'\r\nconst PrivateRoute=(props)=>{\r\nconst [token,setToken]=useState(true) \r\n// if(localStorage.getItem(\"token\"))\r\nif(localStorage.getItem(\"x-auth-token\")){\r\n    return(\r\n        <div>\r\n        <Header></Header>\r\n        <Route path={props.path} component={props.component}></Route>\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return(\r\n        <Redirect path='/signin'></Redirect>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default PrivateRoute","D:\\social media\\social-media-react-graphql\\src\\Reducer\\Actions.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Home\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Postdetail\\index.js",["120","121","122","123","124","125","126"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Divider, Input, Skeleton, Text } from '@chakra-ui/react'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions' \r\nimport './Postdetail.css'\r\nimport Post from '../Post'\r\nimport Comments from '../Comments'\r\nimport { getPost, postComment } from '../../API/calls'\r\nimport { connect } from 'react-redux'\r\nconst Postdetail = (props) => {\r\n  const [post, setPost] = useState({})\r\n  useEffect(() => {\r\n    const getPostDetail=async()=>{\r\n      let data=await getPost(props.match.params.id)\r\n      setPost(data)\r\n    }\r\n    getPostDetail()\r\n  }, [])\r\n  // ----------------\r\n  const onPost = async(val, postid) => {\r\n    let temp = {...post}\r\n    let tempPost={...post}\r\n    temp.comments=[...temp.comments, {Text: val,time:new Date().toISOString() ,user: { ...temp.user }} ]\r\n    // ele.comments.push({ Text: val, user: { ...ele.user } })\r\n      \r\n    setPost({...temp})\r\n    let data=await postComment(postid,val)\r\n    if(data.error){\r\n      setPost({...tempPost})\r\n      props.getPosts()\r\n      alert(\"Something went wrong\")\r\n    }\r\n  }\r\n  // ---------------\r\n  return (\r\n\r\n    <div className=\"Postdetail\">\r\n      {post['Title'] === undefined ? <div><Skeleton height=\"400px\" />\r\n      </div> :\r\n        \r\n          <Post postcomment={onPost} post={post}>\r\n          <Comments home={false} comments={post.comments}></Comments>\r\n          </Post>\r\n       \r\n      } \r\n    </div>\r\n  )\r\n\r\n}\r\nconst mapActionsToProps=(dispatch)=>{\r\n  return({\r\n      getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n  })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n  return({\r\n      posts:state.posts\r\n  })\r\n}\r\nexport default withRouter(connect(mapActionsToState,mapActionsToProps)(Postdetail))","D:\\social media\\social-media-react-graphql\\src\\Components\\Profile\\index.js",["127"],"D:\\social media\\social-media-react-graphql\\src\\API\\Api.js",[],"D:\\social media\\social-media-react-graphql\\src\\Firebase\\firebase.js",[],"D:\\social media\\social-media-react-graphql\\src\\API\\calls.js",["128","129","130"],"D:\\social media\\social-media-react-graphql\\src\\Header\\index.js",["131","132","133"],"D:\\social media\\social-media-react-graphql\\src\\Components\\Posts\\index.js",["134","135","136","137","138"],"D:\\social media\\social-media-react-graphql\\src\\Components\\Comments\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\index.js",["139","140"],"D:\\social media\\social-media-react-graphql\\src\\ApolloClient\\index.js",[],"D:\\social media\\social-media-react-graphql\\src\\Components\\NewPost\\index.js",["141","142","143","144"],"import { Avatar, Button, Divider, Input, Skeleton } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { MdTitle } from 'react-icons/md'\r\nimport { GoRocket } from 'react-icons/go'\r\nimport { BsImageAlt } from 'react-icons/bs'\r\nimport firebase from '../../Firebase/firebase'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {createPost} from '../../API/calls'\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport './NewPost.css'\r\nconst NewPost = (props) => {\r\n    const toast = useToast()\r\n    const [user, setUser] = useState({})\r\n    const [titleInput, setTitleInput] = useState(false)\r\n    const [image, setImage] = useState(null)\r\n    const [title,setTitle]=useState('')\r\n    const [body,setBody]=useState('')\r\n    console.log(localStorage.getItem('user_email'))\r\n    useEffect(() => {\r\n        props.getUser()\r\n        \r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(props.user)\r\n        if (\"data\" in props.user && !(\"error\" in props.user.data)) {\r\n\r\n            setUser(props.user.data.data.getUser)\r\n        }\r\n    }, [props.user])\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n    const Post=async()=>{\r\n        let res=null\r\n        if(image){\r\n            let filename=uuidv4()\r\n            res=await uploadImage(filename)\r\n        }\r\n        \r\n        let data={\r\n            Image:image?res:\"\",\r\n            body:body,\r\n            title:title,\r\n            time:new Date()\r\n        }\r\n        let result=await createPost(data)\r\n        props.getPosts()\r\n        clear()\r\n        toast({\r\n            title: \"Posted successfully.\",\r\n            \r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n\r\n    }\r\n    const clear=()=>{\r\n        setImage(null)\r\n        setTitle('')\r\n        setTitleInput(false)\r\n        setBody('')\r\n    }\r\n    return (<div>{\r\n        Object.keys(user).length !== 0 ? <div className=\"newPostHolder\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"newpost\">\r\n                <Avatar size=\"md\" name={user.Name} src={user.image} />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", padding: 10 }}>\r\n                    {image ? <img style={{ marginBottom: 10 }} src={URL.createObjectURL(image)}></img> : null}\r\n                    <Input value={body} onChange={(e)=>{setBody(e.target.value)}} style={{ borderRadius: 15, height: 75, marginLeft: 10 }} placeholder={`What's on your mind, ${user.Name.split(' ')[0]} ?`} size=\"lg\" />\r\n                    <Input value={title} onChange={(e)=>{setTitle(e.target.value)}} placeholder=\"Enter title\" style={{ visibility: titleInput ? \"visible\" : \"hidden\", height: titleInput ? 50 : 0, borderRadius: 15, marginLeft: 10, marginTop: 20, transition: \"height 0.2s,visibility 0.1s\" }}></Input>\r\n                </div>\r\n            </div>\r\n            <Divider></Divider>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\", marginTop: 15, marginBottom: 15 }}>\r\n                <Button onClick={() => { setTitleInput(!titleInput) }} variant=\"ghost\" colorScheme=\"green\" leftIcon={<MdTitle />}>\r\n                    Add Title\r\n                </Button>\r\n                <Button onClick={() => {\r\n                    document.getElementById(\"image_select\").click()\r\n                }} type='file' variant=\"ghost\" colorScheme=\"red\" leftIcon={<BsImageAlt />}>\r\n                    Add Image\r\n                </Button>\r\n                <Button onClick={Post} variant=\"ghost\" colorScheme=\"blue\" leftIcon={<GoRocket />}>\r\n                    POST\r\n                </Button>\r\n                <input id=\"image_select\" onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                }} type=\"file\" style={{ display: \"none\" }}></input>\r\n\r\n            </div>\r\n        </div> : <div><Skeleton height=\"400px\" /></div>\r\n    }</div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            user: state.user\r\n        }\r\n    )\r\n}\r\nconst mapActionsToState = (dispatch) => {\r\n    return (\r\n        {\r\n            getUser: () => {dispatch(Actions.getUserThunk(localStorage.getItem(\"user_email\"))) },\r\n            getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n        }\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapActionsToState)(NewPost)","D:\\social media\\social-media-react-graphql\\src\\Components\\Post\\PostModel.js",["145"],"import React from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Divider,\r\n    Avatar,\r\n    Text,\r\n  } from \"@chakra-ui/react\"\r\n\r\nconst PostModel=(props)=>{\r\n    \r\nreturn(\r\n    <>\r\n    <Modal isOpen={props.open} onClose={props.close}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Liked By</ModalHeader>\r\n        <ModalCloseButton />\r\n        <Divider></Divider>\r\n        <ModalBody>\r\n          <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n              {props.Likes.map((ele)=>{\r\n                  return(\r\n                      <div style={{display:\"flex\",flexDirection:'row',marginBottom:15,marginTop:15}}>\r\n                          <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                          <Text fontSize=\"md\" style={{ fontWeight: 600, marginLeft: 10 }}>{ele.Name}</Text>\r\n                      </div>\r\n                  )\r\n              })}\r\n          </div>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          {/* <Button colorScheme=\"blue\" mr={3} onClick={props.close}>\r\n            Close\r\n          </Button> */}\r\n          {/* <Button variant=\"ghost\">Secondary Action</Button> */}\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n)\r\n}\r\n\r\nexport default PostModel","D:\\social media\\social-media-react-graphql\\src\\Components\\Comment\\index.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":12},{"ruleId":"150","severity":1,"message":"154","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":19},{"ruleId":"150","severity":1,"message":"155","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":13},{"ruleId":"150","severity":1,"message":"156","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":9,"column":5,"nodeType":"160","messageId":"161","endLine":16,"endColumn":6},{"ruleId":"150","severity":1,"message":"155","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":13},{"ruleId":"150","severity":1,"message":"162","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":21,"column":17,"nodeType":"165","endLine":21,"endColumn":68},{"ruleId":"150","severity":1,"message":"154","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":30,"column":21,"nodeType":"160","messageId":"161","endLine":37,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":55,"column":17,"nodeType":"165","endLine":55,"endColumn":70},{"ruleId":"150","severity":1,"message":"166","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},{"ruleId":"150","severity":1,"message":"167","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":13},{"ruleId":"150","severity":1,"message":"168","line":6,"column":14,"nodeType":"152","messageId":"153","endLine":6,"endColumn":22},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"170","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":16},{"ruleId":"150","severity":1,"message":"171","line":4,"column":18,"nodeType":"152","messageId":"153","endLine":4,"endColumn":25},{"ruleId":"150","severity":1,"message":"172","line":4,"column":27,"nodeType":"152","messageId":"153","endLine":4,"endColumn":32},{"ruleId":"150","severity":1,"message":"173","line":4,"column":44,"nodeType":"152","messageId":"153","endLine":4,"endColumn":48},{"ruleId":"150","severity":1,"message":"162","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":20,"column":6,"nodeType":"176","endLine":20,"endColumn":8,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":24,"column":8,"nodeType":"176","endLine":24,"endColumn":24,"suggestions":"179"},{"ruleId":"150","severity":1,"message":"180","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":18},{"ruleId":"150","severity":1,"message":"181","line":4,"column":9,"nodeType":"152","messageId":"153","endLine":4,"endColumn":15},{"ruleId":"150","severity":1,"message":"182","line":109,"column":13,"nodeType":"152","messageId":"153","endLine":109,"endColumn":17},{"ruleId":"150","severity":1,"message":"183","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":9},{"ruleId":"163","severity":1,"message":"164","line":24,"column":17,"nodeType":"165","endLine":24,"endColumn":156},{"ruleId":"184","severity":1,"message":"185","line":36,"column":50,"nodeType":"186","messageId":"187","endLine":36,"endColumn":52},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"162","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"174","severity":1,"message":"188","line":17,"column":5,"nodeType":"176","endLine":17,"endColumn":7,"suggestions":"189"},{"ruleId":"184","severity":1,"message":"190","line":27,"column":21,"nodeType":"186","messageId":"191","endLine":27,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":28,"column":19,"nodeType":"194","messageId":"195","endLine":28,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":21,"column":41,"nodeType":"186","messageId":"187","endLine":21,"endColumn":43},{"ruleId":"163","severity":1,"message":"164","line":141,"column":32,"nodeType":"165","endLine":141,"endColumn":71},{"ruleId":"174","severity":1,"message":"188","line":24,"column":8,"nodeType":"176","endLine":24,"endColumn":10,"suggestions":"196"},{"ruleId":"158","severity":1,"message":"159","line":43,"column":21,"nodeType":"160","messageId":"161","endLine":50,"endColumn":22},{"ruleId":"150","severity":1,"message":"197","line":76,"column":13,"nodeType":"152","messageId":"153","endLine":76,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":99,"column":30,"nodeType":"165","endLine":99,"endColumn":97},{"ruleId":"150","severity":1,"message":"170","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":11},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Api' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Home' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'Axios' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'Text' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["200"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["201"],"'Redirect' is defined but never used.","'client' is defined but never used.","'data' is assigned a value but never used.","'_' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["202"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["203"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},"Update the dependencies array to be: [props.match.params.id]",{"range":"211","text":"212"},"Update the dependencies array to be: [props, props.location]",{"range":"213","text":"214"},"Update the dependencies array to be: [props]",{"range":"215","text":"216"},{"range":"217","text":"216"},[708,710],"[props.match.params.id]",[912,928],"[props, props.location]",[526,528],"[props]",[950,952]]