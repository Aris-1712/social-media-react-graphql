[{"D:\\Social media\\social-media\\src\\index.js":"1","D:\\Social media\\social-media\\src\\reportWebVitals.js":"2","D:\\Social media\\social-media\\src\\App.js":"3","D:\\Social media\\social-media\\src\\Components\\Login\\index.js":"4","D:\\Social media\\social-media\\src\\Components\\Signup\\index.js":"5","D:\\Social media\\social-media\\src\\Routes\\Router.js":"6","D:\\Social media\\social-media\\src\\Routes\\PrivateRoute.js":"7","D:\\Social media\\social-media\\src\\Components\\Home\\index.js":"8","D:\\Social media\\social-media\\src\\Header\\index.js":"9","D:\\Social media\\social-media\\src\\Components\\Posts\\index.js":"10","D:\\Social media\\social-media\\src\\Components\\Post\\index.js":"11","D:\\Social media\\social-media\\src\\Components\\Postdetail\\index.js":"12","D:\\Social media\\social-media\\src\\API\\Api.js":"13","D:\\Social media\\social-media\\src\\Components\\Comments\\index.js":"14","D:\\Social media\\social-media\\src\\Components\\Comment\\index.js":"15","D:\\Social media\\social-media\\src\\Components\\Post\\PostModel.js":"16","D:\\Social media\\social-media\\src\\Reducer\\Reducer.js":"17","D:\\Social media\\social-media\\src\\Reducer\\Actions.js":"18","D:\\Social media\\social-media\\src\\API\\calls.js":"19","D:\\Social media\\social-media\\src\\Components\\NewPost\\index.js":"20","D:\\Social media\\social-media\\src\\Firebase\\firebase.js":"21","D:\\Social media\\social-media\\src\\Components\\Profile\\index.js":"22"},{"size":854,"mtime":1610534708982,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":420,"mtime":1610534679880,"results":"26","hashOfConfig":"24"},{"size":2628,"mtime":1610537052882,"results":"27","hashOfConfig":"24"},{"size":4793,"mtime":1610876894466,"results":"28","hashOfConfig":"24"},{"size":834,"mtime":1611034387151,"results":"29","hashOfConfig":"24"},{"size":575,"mtime":1610275285065,"results":"30","hashOfConfig":"24"},{"size":392,"mtime":1610623648859,"results":"31","hashOfConfig":"24"},{"size":716,"mtime":1610275176713,"results":"32","hashOfConfig":"24"},{"size":1852,"mtime":1611120189219,"results":"33","hashOfConfig":"24"},{"size":5419,"mtime":1611120549388,"results":"34","hashOfConfig":"24"},{"size":1832,"mtime":1610544090964,"results":"35","hashOfConfig":"24"},{"size":41,"mtime":1610432892738,"results":"36","hashOfConfig":"24"},{"size":582,"mtime":1610544191525,"results":"37","hashOfConfig":"24"},{"size":970,"mtime":1611120854691,"results":"38","hashOfConfig":"24"},{"size":1366,"mtime":1610525580044,"results":"39","hashOfConfig":"24"},{"size":338,"mtime":1610953181672,"results":"40","hashOfConfig":"24"},{"size":749,"mtime":1611036151133,"results":"41","hashOfConfig":"24"},{"size":5968,"mtime":1610952466225,"results":"42","hashOfConfig":"24"},{"size":5808,"mtime":1610953542608,"results":"43","hashOfConfig":"24"},{"size":427,"mtime":1610867967793,"results":"44","hashOfConfig":"24"},{"size":1924,"mtime":1611120735064,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jg4b4l",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Social media\\social-media\\src\\index.js",[],["101","102"],"D:\\Social media\\social-media\\src\\reportWebVitals.js",[],"D:\\Social media\\social-media\\src\\App.js",["103","104","105","106","107"],"import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\nimport axios from 'axios'\nimport Login from './Components/Login';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport Signup from './Components/Signup';\nimport Router from './Routes/Router';\n\nfunction App() {\n \n  return (\n    \n    <ChakraProvider>\n    <Router></Router>\n      </ChakraProvider>\n      \n  );\n}\n\nexport default App;\n","D:\\Social media\\social-media\\src\\Components\\Login\\index.js",["108","109","110"],"import React, { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport { Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { connect } from 'react-redux'\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"x-auth-token\") && localStorage.getItem(\"x-auth-token\")!==\"\"){\r\n            props.history.push('/home')\r\n        }\r\n    },[props])\r\n    const handleHide = () => setShow(!show)\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_holder\">\r\n                <img src={process.env.PUBLIC_URL+'/Logo/dark.png'}></img>\r\n                <h1>Login</h1>\r\n            <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n            <InputGroup size=\"md\">\r\n                <Input\r\n                    pr=\"4.5rem\"\r\n                    type={show ? \"text\" : \"password\"}\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={(e) => { setPassword(e.target.value) }}\r\n                />\r\n                <InputRightElement width=\"4.5rem\">\r\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleHide}>\r\n                        {show ? \"Hide\" : \"Show\"}\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n            <Button onClick={() => {\r\n                props.signin({email:email,password:password})\r\n            //     axios({\r\n            //         url: Api,\r\n            //         method: 'post',\r\n            //         data: {\r\n            //             query: `\r\n            // mutation{\r\n            //     signin(email:\"${email}\",pass:\"${password}\")\r\n            //     }\r\n            //   `\r\n            //         }\r\n            //     }).then((result) => {\r\n            //         localStorage.setItem(\"x-auth-token\",result.data.data.signin)\r\n            //         props.history.push('/home')\r\n            //         // console.log(result)\r\n            //     });\r\n            }} colorScheme=\"blue\">Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapActionsToProps=(dispatch)=>{\r\n    return({\r\n        signin:(data)=>{dispatch(Actions.signinAction(data))}\r\n    })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n    return({\r\n        user:state.user\r\n    })\r\n}\r\nexport default connect(mapActionsToState,mapActionsToProps)(Login)","D:\\Social media\\social-media\\src\\Components\\Signup\\index.js",["111","112","113"],"import React, { useEffect, useState } from 'react'\r\nimport './Signup.css'\r\nimport { Avatar, Button, Input, InputGroup, InputRightElement } from \"@chakra-ui/react\"\r\nimport axios from 'axios'\r\nimport { Api } from '../../API/Api'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport firebase from '../../Firebase/firebase'\r\nconst Signup = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [imageTempUrl,setImageTempUrl]=useState('')\r\n    \r\n    const [image,setImage]=useState()\r\n    const handleHide = () => setShow(!show)\r\n\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n   \r\n\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"signup_holder\">\r\n                <img src={process.env.PUBLIC_URL + '/Logo/dark.png'}></img>\r\n                <h1>Signup</h1>\r\n                <Avatar onClick={()=>{\r\n                    document.getElementById(\"profile_pic\").click()\r\n                    \r\n                }} size=\"2xl\" name={name} src={imageTempUrl}/>\r\n                <input onChange={(e)=>{\r\n                    setImage(e.target.files[0])\r\n                    setImageTempUrl(URL.createObjectURL(e.target.files[0]))\r\n                }}  id=\"profile_pic\" type=\"file\" style={{display:\"none\"}}></input>\r\n                <Input placeholder=\"Enter Name\" size=\"md\" onChange={(e) => { setName(e.target.value) }} />\r\n                <Input placeholder=\"Enter Age\" size=\"md\" onChange={(e) => { setAge(e.target.value) }} />\r\n                <Input placeholder=\"Enter Email\" size=\"md\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                <InputGroup size=\"md\">\r\n                    <Input\r\n                        pr=\"4.5rem\"\r\n                        type={ show ? \"text\" : \"password\" }\r\n                        placeholder=\"Enter Password\"\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={ handleHide }>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                        </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n                <Button onClick={async() => {\r\n                    let filename=uuidv4()\r\n                    let res=await uploadImage(filename)\r\n                    axios({\r\n                        url: Api,\r\n                        method: 'post',\r\n                        data: {\r\n                            query: `\r\n                        mutation{\r\n                            createUser(email:\"${email}\",Age:${age},name:\"${name}\",password:\"${password}\",image:\"${res}\"){\r\n                              Name\r\n                              _id\r\n                              Age\r\n                            }\r\n                          }\r\n              `\r\n                        }\r\n                    }).then((result) => {\r\n                        localStorage.setItem(\"user\", result.data)\r\n                        props.history.push('/signin')\r\n                    });\r\n                }} colorScheme=\"blue\">Signup</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Signup","D:\\Social media\\social-media\\src\\Routes\\Router.js",[],"D:\\Social media\\social-media\\src\\Routes\\PrivateRoute.js",["114","115","116"],"import React, { useState } from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport Home from '../Components/Home'\r\nimport Header from '../Header'\r\nconst PrivateRoute=(props)=>{\r\nconst [token,setToken]=useState(true) \r\n// if(localStorage.getItem(\"token\"))\r\nif(localStorage.getItem(\"x-auth-token\")){\r\n    return(\r\n        <div>\r\n        <Header></Header>\r\n        <Route path={props.path} component={props.component}></Route>\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return(\r\n        <Redirect path='/signin'></Redirect>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default PrivateRoute","D:\\Social media\\social-media\\src\\Components\\Home\\index.js",[],"D:\\Social media\\social-media\\src\\Header\\index.js",["117"],"import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nconst Header=(props)=>{\r\n\r\n    return(\r\n        <div style={{height:70,backgroundColor:\"#17b890\"}}>\r\n            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",flex:1,margin:\"0px 50px\",alignItems:\"center\",height:\"100%\"}}>\r\n                <img style={{width:150}} src={`${process.env.PUBLIC_URL}/Logo/header.png`}></img>\r\n                <i onClick={()=>{localStorage.clear()\r\n                props.history.push('/Signin')\r\n                }} style={{fontSize:30,color:\"#082D0F\"}} class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Header)","D:\\Social media\\social-media\\src\\Components\\Posts\\index.js",["118","119","120","121","122","123"],"D:\\Social media\\social-media\\src\\Components\\Post\\index.js",["124"],"D:\\Social media\\social-media\\src\\Components\\Postdetail\\index.js",["125","126","127","128","129","130","131"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Divider, Input, Skeleton, Text } from '@chakra-ui/react'\r\nimport { Api } from '../../API/Api'\r\nimport * as Actions from '../../Reducer/Actions' \r\nimport './Postdetail.css'\r\nimport Post from '../Post'\r\nimport Comments from '../Comments'\r\nimport { getPost, postComment } from '../../API/calls'\r\nimport { connect } from 'react-redux'\r\nconst Postdetail = (props) => {\r\n  const [post, setPost] = useState({})\r\n  useEffect(() => {\r\n    const getPostDetail=async()=>{\r\n      let data=await getPost(props.match.params.id)\r\n      setPost(data)\r\n    }\r\n    getPostDetail()\r\n  }, [])\r\n  // ----------------\r\n  const onPost = async(val, postid) => {\r\n    let temp = {...post}\r\n    let tempPost={...post}\r\n    temp.comments=[...temp.comments, {Text: val,time:new Date().toISOString() ,user: { ...temp.user }} ]\r\n    // ele.comments.push({ Text: val, user: { ...ele.user } })\r\n      \r\n    setPost({...temp})\r\n    let data=await postComment(postid,val)\r\n    if(data.error){\r\n      setPost({...tempPost})\r\n      props.getPosts()\r\n      alert(\"Something went wrong\")\r\n    }\r\n  }\r\n  // ---------------\r\n  return (\r\n\r\n    <div className=\"Postdetail\">\r\n      {post['Title'] === undefined ? <div><Skeleton height=\"400px\" />\r\n      </div> :\r\n        \r\n          <Post postcomment={onPost} post={post}>\r\n          <Comments home={false} comments={post.comments}></Comments>\r\n          </Post>\r\n       \r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\nconst mapActionsToProps=(dispatch)=>{\r\n  return({\r\n      getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n  })\r\n}\r\nconst mapActionsToState=(state)=>{\r\n  return({\r\n      posts:state.posts\r\n  })\r\n}\r\nexport default withRouter(connect(mapActionsToState,mapActionsToProps)(Postdetail))","D:\\Social media\\social-media\\src\\API\\Api.js",[],"D:\\Social media\\social-media\\src\\Components\\Comments\\index.js",[],"D:\\Social media\\social-media\\src\\Components\\Comment\\index.js",[],"D:\\Social media\\social-media\\src\\Components\\Post\\PostModel.js",["132"],"import React from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Divider,\r\n    Avatar,\r\n    Text,\r\n  } from \"@chakra-ui/react\"\r\n\r\nconst PostModel=(props)=>{\r\n    \r\nreturn(\r\n    <>\r\n    <Modal isOpen={props.open} onClose={props.close}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Liked By</ModalHeader>\r\n        <ModalCloseButton />\r\n        <Divider></Divider>\r\n        <ModalBody>\r\n          <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n              {props.Likes.map((ele)=>{\r\n                  return(\r\n                      <div style={{display:\"flex\",flexDirection:'row',marginBottom:15,marginTop:15}}>\r\n                          <Avatar size=\"sm\" name={ele.Name} src={ele.image} />\r\n                          <Text fontSize=\"md\" style={{ fontWeight: 600, marginLeft: 10 }}>{ele.Name}</Text>\r\n                      </div>\r\n                  )\r\n              })}\r\n          </div>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          {/* <Button colorScheme=\"blue\" mr={3} onClick={props.close}>\r\n            Close\r\n          </Button> */}\r\n          {/* <Button variant=\"ghost\">Secondary Action</Button> */}\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  </>\r\n)\r\n}\r\n\r\nexport default PostModel","D:\\Social media\\social-media\\src\\Reducer\\Reducer.js",["133"],"\r\nconst initialState={\r\nuser:{},\r\nposts:[]\r\n}\r\nexport const Reducer=(state=initialState,Action)=>{\r\n   \r\n    switch (Action.type) {\r\n        case \"SIGNIN\":\r\n            return({...state,user:{...Action.payLoad}})\r\n        case \"GET_POSTS\":\r\n            return({...state,posts:[...Action.payLoad]})  \r\n    }\r\n    return state\r\n \r\n    \r\n\r\n}","D:\\Social media\\social-media\\src\\Reducer\\Actions.js",[],"D:\\Social media\\social-media\\src\\API\\calls.js",["134"],"import { Api } from \"./Api\"\r\nimport Axios from 'axios'\r\nimport { Redirect } from \"react-router\"\r\nexport const signin=(data)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        Axios({\r\n            url: Api,\r\n            method: 'post',\r\n            data: {\r\n                query: `\r\n    mutation{\r\n        signin(email:\"${data.email}\",pass:\"${data.password}\")\r\n        }\r\n      `\r\n            }\r\n        }).then((result) => {\r\n            if (\"errors\" in result.data) {\r\n            alert(\"Incorrect username or password\")\r\n            reject(result.data.errors[0].message)\r\n            } else {\r\n              localStorage.setItem(\"x-auth-token\",result.data.data.signin)\r\n              let user=getUser(data.email)\r\n              resolve(user)\r\n            }\r\n          \r\n        }).catch(err=>{\r\n            alert(\"Incorrect username or password\")\r\n            reject(err)\r\n        })\r\n    })\r\n    \r\n\r\n}\r\n\r\nexport const getUser=async(email)=>{\r\n  try{\r\n    let data = await Axios.post(Api, {\r\n        query: `mutation{\r\n            getUser(email:\"${email}\"){\r\n                Name\r\n                _id\r\n                image\r\n                email\r\n                followers{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                following{\r\n                    Name\r\n                    _id\r\n                    image\r\n                }\r\n                Age\r\n                posts{\r\n                    _id\r\n                    Title\r\n                    Body\r\n                    Image\r\n                    Likes{\r\n                        _id\r\n                        Name\r\n                        image\r\n                    }\r\n                    comments{\r\n                        Text\r\n                        time\r\n                        user{\r\n                            _id\r\n                            Name\r\n                            image\r\n                        }\r\n                    }\r\n                    time\r\n                }\r\n\r\n          }\r\n}`\r\n      }\r\n      , {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n        }\r\n      }\r\n      )\r\n      console.log(data)\r\n      localStorage.setItem(\"user_email\",email)\r\n      return data\r\n    }catch(err){\r\n      \r\n      <Redirect path='/Signin'></Redirect>\r\n    }\r\n}\r\n\r\n\r\nexport const getPosts=()=>{\r\n   \r\n       return new Promise((resolve,reject)=>{\r\n        let data = Axios.post(Api, {\r\n            query: `\r\n          query{\r\n              getPosts{\r\n                Title\r\n                Body\r\n                Image\r\n                _id\r\n                Likes{\r\n                  Name\r\n                  _id\r\n                  image\r\n                }\r\n                user{\r\n                  Name\r\n                  _id\r\n                  image\r\n                }\r\n                comments{\r\n                  Text\r\n                  time\r\n                  user{\r\n                    Name\r\n                    _id\r\n                    image\r\n                  }\r\n                }\r\n              }\r\n            }\r\n  `\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n           \r\n           resolve([...data.data.data.getPosts])\r\n          }).catch(err=>{\r\n            alert(err)\r\n            reject(err)\r\n          })\r\n       })  \r\n}\r\n\r\nexport const postComment=(postid,val)=>{\r\n    return new Promise((resolve,reject)=>{\r\n         Axios.post(Api, {\r\n            query: `\r\n            mutation{\r\n              createComment(pid:\"${postid}\",text:\"${val}\",time:\"${new Date().toISOString()}\"){\r\n                Text\r\n                user{\r\n                  Name\r\n                }\r\n              }\r\n            }\r\n      `\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n            resolve(data)\r\n        })\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport const getPost=(id)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        Axios.post(Api, {\r\n            query: `mutation{\r\n                        getPost(id:\"${id}\"){\r\n                          Title\r\n                          _id\r\n                          Body\r\n                          Image\r\n                          user{\r\n                            Name\r\n                            _id\r\n                            image\r\n                          }\r\n                          comments{\r\n                            time\r\n                              Text\r\n                            user{\r\n                              image\r\n                              Name\r\n                              _id\r\n                            }\r\n                          }\r\n                          Likes{\r\n                            Name\r\n                            image\r\n                            _id\r\n                          }\r\n                          \r\n                        }\r\n                      }`\r\n          }, {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n            }\r\n          }).then((data)=>{\r\n              resolve(data.data.data.getPost)\r\n          }).catch(err=>{\r\n              reject(err)\r\n          })\r\n    })\r\n\r\n}\r\n\r\nexport const createPost=(data)=>{\r\n  return new Promise((resolve,reject)=>{\r\n       Axios.post(Api, {\r\n          query: `\r\n          mutation{\r\n            createPost(title:\"${data.title}\",body:\"${data.body}\",Image:\"${data.Image}\",time:\"${data.time}\"){\r\n              Title\r\n              _id\r\n              user{\r\n                Name\r\n              }\r\n              comments{\r\n                id\r\n              }\r\n            }\r\n          }\r\n    `\r\n        }, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"x-auth-token\")\r\n          }\r\n        }).then((data)=>{\r\n          resolve(data)\r\n      })\r\n  })\r\n  \r\n}","D:\\Social media\\social-media\\src\\Components\\NewPost\\index.js",["135","136","137","138"],"import { Avatar, Button, Divider, Input, Skeleton } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as Actions from '../../Reducer/Actions'\r\nimport { MdTitle } from 'react-icons/md'\r\nimport { GoRocket } from 'react-icons/go'\r\nimport { BsImageAlt } from 'react-icons/bs'\r\nimport firebase from '../../Firebase/firebase'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {createPost} from '../../API/calls'\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport './NewPost.css'\r\nconst NewPost = (props) => {\r\n    const toast = useToast()\r\n    const [user, setUser] = useState({})\r\n    const [titleInput, setTitleInput] = useState(false)\r\n    const [image, setImage] = useState(null)\r\n    const [title,setTitle]=useState('')\r\n    const [body,setBody]=useState('')\r\n    useEffect(() => {\r\n        props.getUser()\r\n        \r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(props.user)\r\n        if (\"data\" in props.user && !(\"error\" in props.user.data)) {\r\n\r\n            setUser(props.user.data.data.getUser)\r\n        }\r\n    }, [props.user])\r\n    const uploadImage = (filename) => {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            let storageRef = firebase.storage().ref();\r\n            let uploadTask = storageRef.child('images/' + filename).put(image);\r\n\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                 (snapshot)=> {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            // console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },function(error) {\r\n                    console.log(error)\r\n                    reject(\"UPLOAD FAILED\")\r\n                   \r\n                    },\r\n                    function(){\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                            resolve(url)\r\n                        })\r\n                    })\r\n        })\r\n    }\r\n    const Post=async()=>{\r\n        let res=null\r\n        if(image){\r\n            let filename=uuidv4()\r\n            res=await uploadImage(filename)\r\n        }\r\n        \r\n        let data={\r\n            Image:image?res:\"\",\r\n            body:body,\r\n            title:title,\r\n            time:new Date()\r\n        }\r\n        let result=await createPost(data)\r\n        props.getPosts()\r\n        clear()\r\n        toast({\r\n            title: \"Posted successfully.\",\r\n            \r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          })\r\n\r\n    }\r\n    const clear=()=>{\r\n        setImage(null)\r\n        setTitle('')\r\n        setTitleInput(false)\r\n        setBody('')\r\n    }\r\n    return (<div>{\r\n        Object.keys(user).length !== 0 ? <div className=\"newPostHolder\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"newpost\">\r\n                <Avatar size=\"md\" name={user.Name} src={user.image} />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\", padding: 10 }}>\r\n                    {image ? <img style={{ marginBottom: 10 }} src={URL.createObjectURL(image)}></img> : null}\r\n                    <Input onChange={(e)=>{setBody(e.target.value)}} style={{ borderRadius: 15, height: 75, marginLeft: 10 }} placeholder={`What's on your mind, ${user.Name.split(' ')[0]} ?`} size=\"lg\" />\r\n                    <Input onChange={(e)=>{setTitle(e.target.value)}} placeholder=\"Enter title\" style={{ visibility: titleInput ? \"visible\" : \"hidden\", height: titleInput ? 50 : 0, borderRadius: 15, marginLeft: 10, marginTop: 20, transition: \"height 0.2s,visibility 0.1s\" }}></Input>\r\n                </div>\r\n            </div>\r\n            <Divider></Divider>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\", marginTop: 15, marginBottom: 15 }}>\r\n                <Button onClick={() => { setTitleInput(!titleInput) }} variant=\"ghost\" colorScheme=\"green\" leftIcon={<MdTitle />}>\r\n                    Add Title\r\n                </Button>\r\n                <Button onClick={() => {\r\n                    document.getElementById(\"image_select\").click()\r\n                }} type='file' variant=\"ghost\" colorScheme=\"red\" leftIcon={<BsImageAlt />}>\r\n                    Add Image\r\n                </Button>\r\n                <Button onClick={Post} variant=\"ghost\" colorScheme=\"blue\" leftIcon={<GoRocket />}>\r\n                    POST\r\n                </Button>\r\n                <input id=\"image_select\" onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                }} type=\"file\" style={{ display: \"none\" }}></input>\r\n\r\n            </div>\r\n        </div> : <div><Skeleton height=\"400px\" /></div>\r\n    }</div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            user: state.user\r\n        }\r\n    )\r\n}\r\nconst mapActionsToState = (dispatch) => {\r\n    return (\r\n        {\r\n            getUser: () => {dispatch(Actions.getUserThunk(localStorage.getItem(\"user_email\"))) },\r\n            getPosts:()=>{dispatch(Actions.getPostsAction())}\r\n        }\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapActionsToState)(NewPost)","D:\\Social media\\social-media\\src\\Firebase\\firebase.js",[],"D:\\Social media\\social-media\\src\\Components\\Profile\\index.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":19},{"ruleId":"143","severity":1,"message":"148","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"149","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"143","severity":1,"message":"150","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":21,"column":17,"nodeType":"154","endLine":21,"endColumn":68},{"ruleId":"143","severity":1,"message":"147","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":30,"column":21,"nodeType":"157","messageId":"158","endLine":37,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":55,"column":17,"nodeType":"154","endLine":55,"endColumn":70},{"ruleId":"143","severity":1,"message":"159","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":12},{"ruleId":"143","severity":1,"message":"160","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":13},{"ruleId":"143","severity":1,"message":"161","line":6,"column":14,"nodeType":"145","messageId":"146","endLine":6,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":8,"column":17,"nodeType":"154","endLine":8,"endColumn":92},{"ruleId":"143","severity":1,"message":"162","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":16,"column":5,"nodeType":"165","endLine":16,"endColumn":7,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":26,"column":21,"nodeType":"169","messageId":"170","endLine":26,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":27,"column":19,"nodeType":"173","messageId":"174","endLine":27,"endColumn":21},{"ruleId":"167","severity":1,"message":"175","line":44,"column":36,"nodeType":"169","messageId":"176","endLine":44,"endColumn":38},{"ruleId":"152","severity":1,"message":"153","line":104,"column":32,"nodeType":"154","endLine":104,"endColumn":71},{"ruleId":"143","severity":1,"message":"162","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"177","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":16},{"ruleId":"143","severity":1,"message":"178","line":4,"column":18,"nodeType":"145","messageId":"146","endLine":4,"endColumn":25},{"ruleId":"143","severity":1,"message":"179","line":4,"column":27,"nodeType":"145","messageId":"146","endLine":4,"endColumn":32},{"ruleId":"143","severity":1,"message":"180","line":4,"column":44,"nodeType":"145","messageId":"146","endLine":4,"endColumn":48},{"ruleId":"143","severity":1,"message":"151","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"181","line":20,"column":6,"nodeType":"165","endLine":20,"endColumn":8,"suggestions":"182"},{"ruleId":"143","severity":1,"message":"177","line":10,"column":5,"nodeType":"145","messageId":"146","endLine":10,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":13,"endColumn":6},{"ruleId":"143","severity":1,"message":"183","line":99,"column":13,"nodeType":"145","messageId":"146","endLine":99,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":23,"column":8,"nodeType":"165","endLine":23,"endColumn":10,"suggestions":"184"},{"ruleId":"155","severity":1,"message":"156","line":42,"column":21,"nodeType":"157","messageId":"158","endLine":49,"endColumn":22},{"ruleId":"143","severity":1,"message":"185","line":75,"column":13,"nodeType":"145","messageId":"146","endLine":75,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":98,"column":30,"nodeType":"154","endLine":98,"endColumn":97},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Api' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Home' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'Axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["188"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Button' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'Text' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["189"],"'data' is assigned a value but never used.",["190"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"191","fix":"195"},"Update the dependencies array to be: [props]",{"range":"196","text":"197"},"Update the dependencies array to be: [props.match.params.id]",{"range":"198","text":"199"},{"range":"200","text":"197"},[504,506],"[props]",[708,710],"[props.match.params.id]",[897,899]]